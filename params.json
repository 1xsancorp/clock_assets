{"name":"Clock assets","tagline":"JavaScript/jQuery Countdown Clock Builder","body":"`/* Get the bourbon mixin from http://bourbon.io */\r\n/* Reset */\r\n.flip-clock-wrapper * {\r\n    -webkit-box-sizing: border-box;\r\n    -moz-box-sizing: border-box;\r\n    -ms-box-sizing: border-box;\r\n    -o-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n    -webkit-backface-visibility: hidden;\r\n    -moz-backface-visibility: hidden;\r\n    -ms-backface-visibility: hidden;\r\n    -o-backface-visibility: hidden;\r\n    backface-visibility: hidden;\r\n}\r\n\r\n.flip-clock-wrapper a {\r\n  cursor: pointer;\r\n  text-decoration: none !important;\r\n  border-bottom: none !important;\r\n  color: #ccc; }\r\n\r\n.flip-clock-wrapper a:hover {\r\n  color: #fff; }\r\n\r\n.flip-clock-wrapper ul {\r\n  list-style: none; }\r\n\r\n.flip-clock-wrapper.clearfix:before,\r\n.flip-clock-wrapper.clearfix:after {\r\n  content: \" \";\r\n  display: table; }\r\n\r\n.flip-clock-wrapper.clearfix:after {\r\n  clear: both; }\r\n\r\n.flip-clock-wrapper.clearfix {\r\n  *zoom: 1; }\r\n\r\n/* Main */\r\n.flip-clock-wrapper {\r\n  font: normal 11px \"Helvetica Neue\", Helvetica, sans-serif;\r\n  -webkit-user-select: none; }\r\n\r\n.flip-clock-wrapper .flip-clock-meridium {\r\n  background: none !important;\r\n  box-shadow: 0 0 0 !important;\r\n  font-size: 36px !important; }\r\n\r\n.flip-clock-wrapper .flip-clock-meridium a { color: #313333; }\r\n\r\n.flip-clock-wrapper {\r\n  text-align: center;\r\n  position: relative;\r\n  width: 100%;\r\n  margin: 1em;\r\n}\r\n\r\n.flip-clock-wrapper:before,\r\n.flip-clock-wrapper:after {\r\n    content: \" \"; /* 1 */\r\n    display: table; /* 2 */\r\n}\r\n.flip-clock-wrapper:after {\r\n    clear: both;\r\n}\r\n\r\n/* Skeleton */\r\n.flip-clock-wrapper ul {\r\n  position: relative;\r\n  float: left;\r\n  margin: 5px;\r\n  width: 60px;\r\n  height: 90px;\r\n  font-size: 80px;\r\n  font-weight: bold;\r\n  line-height: 87px;\r\n  border-radius: 6px;\r\n  background: #000;\r\n}\r\n\r\n.flip-clock-wrapper ul li {\r\n  z-index: 1;\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  text-decoration: none !important;\r\n  margin-left: 0;\r\n}\r\n\r\n.flip-clock-wrapper ul li:first-child {\r\n  z-index: 2; }\r\n\r\n.flip-clock-wrapper ul li a {\r\n  display: block;\r\n  height: 100%;\r\n  -webkit-perspective: 200px;\r\n  -moz-perspective: 200px;\r\n  perspective: 200px;\r\n  margin: 0 !important;\r\n  overflow: visible !important;\r\n  cursor: default !important; }\r\n\r\n.flip-clock-wrapper ul li a div {\r\n  z-index: 1;\r\n  position: absolute;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50%;\r\n  font-size: 80px;\r\n  overflow: hidden; }\r\n\r\n.flip-clock-wrapper ul li a div .shadow {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 2; }\r\n\r\n.flip-clock-wrapper ul li a div.up {\r\n  -webkit-transform-origin: 50% 100%;\r\n  -moz-transform-origin: 50% 100%;\r\n  -ms-transform-origin: 50% 100%;\r\n  -o-transform-origin: 50% 100%;\r\n  transform-origin: 50% 100%;\r\n  top: 0; }\r\n\r\n.flip-clock-wrapper ul li a div.up:after {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 44px;\r\n  left: 0;\r\n  z-index: 5;\r\n  width: 100%;\r\n  height: 3px;\r\n  background-color: #000;\r\n  background-color: rgba(0, 0, 0, 0.4); }\r\n\r\n.flip-clock-wrapper ul li a div.down {\r\n  -webkit-transform-origin: 50% 0;\r\n  -moz-transform-origin: 50% 0;\r\n  -ms-transform-origin: 50% 0;\r\n  -o-transform-origin: 50% 0;\r\n  transform-origin: 50% 0;\r\n  bottom: 0; }\r\n\r\n.flip-clock-wrapper ul li a div div.inn {\r\n  position: absolute;\r\n  left: 0;\r\n  z-index: 1;\r\n  width: 100%;\r\n  height: 200%;\r\n  color: #ccc;\r\n  text-shadow: 0 1px 2px #000;\r\n  text-align: center;\r\n  background-color: #333;\r\n  border-radius: 6px;\r\n  font-size: 70px; }\r\n\r\n.flip-clock-wrapper ul li a div.up div.inn {\r\n  top: 0; }\r\n\r\n.flip-clock-wrapper ul li a div.down div.inn {\r\n  bottom: 0; }\r\n\r\n/* PLAY */\r\n.flip-clock-wrapper ul.play li.flip-clock-before {\r\n  z-index: 3; }\r\n\r\n.flip-clock-wrapper .flip {   box-shadow: 0 2px 5px rgba(0, 0, 0, 0.7); }\r\n\r\n.flip-clock-wrapper ul.play li.flip-clock-active {\r\n  -webkit-animation: asd 0.5s 0.5s linear both;\r\n  -moz-animation: asd 0.5s 0.5s linear both;\r\n  animation: asd 0.5s 0.5s linear both;\r\n  z-index: 5; }\r\n\r\n.flip-clock-divider {\r\n  float: left;\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 20px;\r\n  height: 100px; }\r\n\r\n.flip-clock-divider:first-child {\r\n  width: 0; }\r\n\r\n.flip-clock-dot {\r\n  display: block;\r\n  background: #323434;\r\n  width: 10px;\r\n  height: 10px;\r\n  position: absolute;\r\n  border-radius: 50%;\r\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\r\n  left: 5px; }\r\n\r\n.flip-clock-divider .flip-clock-label {\r\n  position: absolute;\r\n  top: -1.5em;\r\n  right: -86px;\r\n  color: black;\r\n  text-shadow: none; }\r\n\r\n.flip-clock-divider.minutes .flip-clock-label {\r\n  right: -88px; }\r\n\r\n.flip-clock-divider.seconds .flip-clock-label {\r\n  right: -91px; }\r\n\r\n.flip-clock-dot.top {\r\n  top: 30px; }\r\n\r\n.flip-clock-dot.bottom {\r\n  bottom: 30px; }\r\n\r\n@-webkit-keyframes asd {\r\n  0% {\r\n    z-index: 2; }\r\n\r\n  20% {\r\n    z-index: 4; }\r\n\r\n  100% {\r\n    z-index: 4; } }\r\n\r\n@-moz-keyframes asd {\r\n  0% {\r\n    z-index: 2; }\r\n\r\n  20% {\r\n    z-index: 4; }\r\n\r\n  100% {\r\n    z-index: 4; } }\r\n\r\n@-o-keyframes asd {\r\n  0% {\r\n    z-index: 2; }\r\n\r\n  20% {\r\n    z-index: 4; }\r\n\r\n  100% {\r\n    z-index: 4; } }\r\n\r\n@keyframes asd {\r\n  0% {\r\n    z-index: 2; }\r\n\r\n  20% {\r\n    z-index: 4; }\r\n\r\n  100% {\r\n    z-index: 4; } }\r\n\r\n.flip-clock-wrapper ul.play li.flip-clock-active .down {\r\n  z-index: 2;\r\n  -webkit-animation: turn 0.5s 0.5s linear both;\r\n  -moz-animation: turn 0.5s 0.5s linear both;\r\n  animation: turn 0.5s 0.5s linear both; }\r\n\r\n@-webkit-keyframes turn {\r\n  0% {\r\n    -webkit-transform: rotateX(90deg); }\r\n\r\n  100% {\r\n    -webkit-transform: rotateX(0deg); } }\r\n\r\n@-moz-keyframes turn {\r\n  0% {\r\n    -moz-transform: rotateX(90deg); }\r\n\r\n  100% {\r\n    -moz-transform: rotateX(0deg); } }\r\n\r\n@-o-keyframes turn {\r\n  0% {\r\n    -o-transform: rotateX(90deg); }\r\n\r\n  100% {\r\n    -o-transform: rotateX(0deg); } }\r\n\r\n@keyframes turn {\r\n  0% {\r\n    transform: rotateX(90deg); }\r\n\r\n  100% {\r\n    transform: rotateX(0deg); } }\r\n\r\n.flip-clock-wrapper ul.play li.flip-clock-before .up {\r\n  z-index: 2;\r\n  -webkit-animation: turn2 0.5s linear both;\r\n  -moz-animation: turn2 0.5s linear both;\r\n  animation: turn2 0.5s linear both; }\r\n\r\n@-webkit-keyframes turn2 {\r\n  0% {\r\n    -webkit-transform: rotateX(0deg); }\r\n\r\n  100% {\r\n    -webkit-transform: rotateX(-90deg); } }\r\n\r\n@-moz-keyframes turn2 {\r\n  0% {\r\n    -moz-transform: rotateX(0deg); }\r\n\r\n  100% {\r\n    -moz-transform: rotateX(-90deg); } }\r\n\r\n@-o-keyframes turn2 {\r\n  0% {\r\n    -o-transform: rotateX(0deg); }\r\n\r\n  100% {\r\n    -o-transform: rotateX(-90deg); } }\r\n\r\n@keyframes turn2 {\r\n  0% {\r\n    transform: rotateX(0deg); }\r\n\r\n  100% {\r\n    transform: rotateX(-90deg); } }\r\n\r\n.flip-clock-wrapper ul li.flip-clock-active {\r\n  z-index: 3; }\r\n\r\n/* SHADOW */\r\n.flip-clock-wrapper ul.play li.flip-clock-before .up .shadow {\r\n  background: -moz-linear-gradient(top, rgba(0, 0, 0, 0.1) 0%, black 100%);\r\n  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, rgba(0, 0, 0, 0.1)), color-stop(100%, black));\r\n  background: linear, top, rgba(0, 0, 0, 0.1) 0%, black 100%;\r\n  background: -o-linear-gradient(top, rgba(0, 0, 0, 0.1) 0%, black 100%);\r\n  background: -ms-linear-gradient(top, rgba(0, 0, 0, 0.1) 0%, black 100%);\r\n  background: linear, to bottom, rgba(0, 0, 0, 0.1) 0%, black 100%;\r\n  -webkit-animation: show 0.5s linear both;\r\n  -moz-animation: show 0.5s linear both;\r\n  animation: show 0.5s linear both; }\r\n\r\n.flip-clock-wrapper ul.play li.flip-clock-active .up .shadow {\r\n  background: -moz-linear-gradient(top, rgba(0, 0, 0, 0.1) 0%, black 100%);\r\n  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, rgba(0, 0, 0, 0.1)), color-stop(100%, black));\r\n  background: linear, top, rgba(0, 0, 0, 0.1) 0%, black 100%;\r\n  background: -o-linear-gradient(top, rgba(0, 0, 0, 0.1) 0%, black 100%);\r\n  background: -ms-linear-gradient(top, rgba(0, 0, 0, 0.1) 0%, black 100%);\r\n  background: linear, to bottom, rgba(0, 0, 0, 0.1) 0%, black 100%;\r\n  -webkit-animation: hide 0.5s 0.3s linear both;\r\n  -moz-animation: hide 0.5s 0.3s linear both;\r\n  animation: hide 0.5s 0.3s linear both; }\r\n\r\n/*DOWN*/\r\n.flip-clock-wrapper ul.play li.flip-clock-before .down .shadow {\r\n  background: -moz-linear-gradient(top, black 0%, rgba(0, 0, 0, 0.1) 100%);\r\n  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, black), color-stop(100%, rgba(0, 0, 0, 0.1)));\r\n  background: linear, top, black 0%, rgba(0, 0, 0, 0.1) 100%;\r\n  background: -o-linear-gradient(top, black 0%, rgba(0, 0, 0, 0.1) 100%);\r\n  background: -ms-linear-gradient(top, black 0%, rgba(0, 0, 0, 0.1) 100%);\r\n  background: linear, to bottom, black 0%, rgba(0, 0, 0, 0.1) 100%;\r\n  -webkit-animation: show 0.5s linear both;\r\n  -moz-animation: show 0.5s linear both;\r\n  animation: show 0.5s linear both; }\r\n\r\n.flip-clock-wrapper ul.play li.flip-clock-active .down .shadow {\r\n  background: -moz-linear-gradient(top, black 0%, rgba(0, 0, 0, 0.1) 100%);\r\n  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, black), color-stop(100%, rgba(0, 0, 0, 0.1)));\r\n  background: linear, top, black 0%, rgba(0, 0, 0, 0.1) 100%;\r\n  background: -o-linear-gradient(top, black 0%, rgba(0, 0, 0, 0.1) 100%);\r\n  background: -ms-linear-gradient(top, black 0%, rgba(0, 0, 0, 0.1) 100%);\r\n  background: linear, to bottom, black 0%, rgba(0, 0, 0, 0.1) 100%;\r\n  -webkit-animation: hide 0.5s 0.3s linear both;\r\n  -moz-animation: hide 0.5s 0.3s linear both;\r\n  animation: hide 0.5s 0.2s linear both; }\r\n\r\n@-webkit-keyframes show {\r\n  0% {\r\n    opacity: 0; }\r\n\r\n  100% {\r\n    opacity: 1; } }\r\n\r\n@-moz-keyframes show {\r\n  0% {\r\n    opacity: 0; }\r\n\r\n  100% {\r\n    opacity: 1; } }\r\n\r\n@-o-keyframes show {\r\n  0% {\r\n    opacity: 0; }\r\n\r\n  100% {\r\n    opacity: 1; } }\r\n\r\n@keyframes show {\r\n  0% {\r\n    opacity: 0; }\r\n\r\n  100% {\r\n    opacity: 1; } }\r\n\r\n@-webkit-keyframes hide {\r\n  0% {\r\n    opacity: 1; }\r\n\r\n  100% {\r\n    opacity: 0; } }\r\n\r\n@-moz-keyframes hide {\r\n  0% {\r\n    opacity: 1; }\r\n\r\n  100% {\r\n    opacity: 0; } }\r\n\r\n@-o-keyframes hide {\r\n  0% {\r\n    opacity: 1; }\r\n\r\n  100% {\r\n    opacity: 0; } }\r\n\r\n@keyframes hide {\r\n  0% {\r\n    opacity: 1; }\r\n\r\n  100% {\r\n    opacity: 0; } }\r\n\t\r\n/* --- SMALL CLOCK CSS --- */\r\n\r\n/* Reset */\r\n.flip-clock-small-wrapper * {\r\n    -webkit-box-sizing: border-box;\r\n    -moz-box-sizing: border-box;\r\n    -ms-box-sizing: border-box;\r\n    -o-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n    -webkit-backface-visibility: hidden;\r\n    -moz-backface-visibility: hidden;\r\n    -ms-backface-visibility: hidden;\r\n    -o-backface-visibility: hidden;\r\n    backface-visibility: hidden;\r\n}\r\n\r\n.flip-clock-small-wrapper a {\r\n  cursor: pointer;\r\n  text-decoration: none !important;\r\n  border-bottom: none !important;\r\n  color: #ccc; }\r\n\r\n.flip-clock-small-wrapper a:hover {\r\n  color: #fff; }\r\n\r\n.flip-clock-small-wrapper ul {\r\n  list-style: none; }\r\n\r\n.flip-clock-small-wrapper.clearfix:before,\r\n.flip-clock-small-wrapper.clearfix:after {\r\n  content: \" \";\r\n  display: table; }\r\n\r\n.flip-clock-small-wrapper.clearfix:after {\r\n  clear: both; }\r\n\r\n.flip-clock-small-wrapper.clearfix {\r\n  *zoom: 1; }\r\n\r\n/* Main */\r\n.flip-clock-small-wrapper {\r\n  font: normal 11px \"Helvetica Neue\", Helvetica, sans-serif;\r\n  -webkit-user-select: none; }\r\n\r\n.flip-clock-small-wrapper .flip-clock-meridium {\r\n  background: none !important;\r\n  box-shadow: 0 0 0 !important;\r\n  font-size: 18px !important; }\r\n\r\n.flip-clock-small-wrapper .flip-clock-meridium a { color: #313333; }\r\n\r\n.flip-clock-small-wrapper {\r\n  text-align: center;\r\n  position: relative;\r\n  width: 100%;\r\n  margin: 1em;\r\n}\r\n\r\n.flip-clock-small-wrapper:before,\r\n.flip-clock-small-wrapper:after {\r\n    content: \" \"; /* 1 */\r\n    display: table; /* 2 */\r\n}\r\n.flip-clock-small-wrapper:after {\r\n    clear: both;\r\n}\r\n\r\n/* Skeleton */\r\n.flip-clock-small-wrapper ul {\r\n  position: relative;\r\n  float: left;\r\n  margin: 2px;\r\n  width: 30px;\r\n  padding: 0;\r\n  height: 38px;\r\n  font-size: 80px;\r\n  font-weight: bold;\r\n  line-height: 37px;\r\n  border-radius: 6px;\r\n  background: #000;\r\n}\r\n\r\n.flip-clock-small-wrapper ul li {\r\n  z-index: 1;\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  text-decoration: none !important;\r\n  margin-left: 0;\r\n}\r\n\r\n.flip-clock-small-wrapper ul li:first-child {\r\n  z-index: 2; }\r\n\r\n.flip-clock-small-wrapper ul li a {\r\n  display: block;\r\n  height: 100%;\r\n  -webkit-perspective: 200px;\r\n  -moz-perspective: 200px;\r\n  perspective: 200px;\r\n  margin: 0 !important;\r\n  overflow: visible !important;\r\n  cursor: default !important; }\r\n\r\n.flip-clock-small-wrapper ul li a div {\r\n  z-index: 1;\r\n  position: absolute;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50%;\r\n  font-size: 80px;\r\n  overflow: hidden; }\r\n\r\n.flip-clock-small-wrapper ul li a div .shadow {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 2; }\r\n\r\n.flip-clock-small-wrapper ul li a div.up {\r\n  -webkit-transform-origin: 50% 100%;\r\n  -moz-transform-origin: 50% 100%;\r\n  -ms-transform-origin: 50% 100%;\r\n  -o-transform-origin: 50% 100%;\r\n  transform-origin: 50% 100%;\r\n  top: 0; }\r\n\r\n.flip-clock-small-wrapper ul li a div.up:after {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 44px;\r\n  left: 0;\r\n  z-index: 5;\r\n  width: 100%;\r\n  height: 3px;\r\n  background-color: #000;\r\n  background-color: rgba(0, 0, 0, 0.4); }\r\n\r\n.flip-clock-small-wrapper ul li a div.down {\r\n  -webkit-transform-origin: 50% 0;\r\n  -moz-transform-origin: 50% 0;\r\n  -ms-transform-origin: 50% 0;\r\n  -o-transform-origin: 50% 0;\r\n  transform-origin: 50% 0;\r\n  bottom: 0; }\r\n\r\n.flip-clock-small-wrapper ul li a div div.inn {\r\n  position: absolute;\r\n  left: 0;\r\n  z-index: 1;\r\n  width: 100%;\r\n  height: 200%;\r\n  color: #ccc;\r\n  text-shadow: 0 1px 2px #000;\r\n  text-align: center;\r\n  background-color: #333;\r\n  border-radius: 6px;\r\n  font-size: 20px; }\r\n\r\n.flip-clock-small-wrapper ul li a div.up div.inn {\r\n  top: 0; }\r\n\r\n.flip-clock-small-wrapper ul li a div.down div.inn {\r\n  bottom: 0; }\r\n\r\n/* PLAY */\r\n.flip-clock-small-wrapper ul.play li.flip-clock-before {\r\n  z-index: 3; }\r\n\r\n.flip-clock-small-wrapper .flip {   box-shadow: 0 2px 5px rgba(0, 0, 0, 0.7); }\r\n\r\n.flip-clock-small-wrapper ul.play li.flip-clock-active {\r\n  -webkit-animation: asd 0.5s 0.5s linear both;\r\n  -moz-animation: asd 0.5s 0.5s linear both;\r\n  animation: asd 0.5s 0.5s linear both;\r\n  z-index: 5; }\r\n\r\n.flip-clock-small-wrapper .flip-clock-divider {\r\n  float: left;\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 15px;\r\n  height: 40px; }\r\n\r\n.flip-clock-small-wrapper .flip-clock-divider:first-child {\r\n  width: 0; }\r\n\r\n.flip-clock-small-wrapper .flip-clock-dot {\r\n  display: block;\r\n  background: #323434;\r\n  width: 5px;\r\n  height: 5px;\r\n  position: absolute;\r\n  border-radius: 50%;\r\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\r\n  left: 5px; }\r\n\r\n.flip-clock-small-wrapper .flip-clock-divider .flip-clock-label {\r\n  position: absolute;\r\n  top: -1.1em;\r\n  right: -48px;\r\n  color: black;\r\n  text-shadow: none; }\r\n\r\n.flip-clock-small-wrapper .flip-clock-divider.minutes .flip-clock-label {\r\n  right: -54px; }\r\n\r\n.flip-clock-small-wrapper .flip-clock-divider.seconds .flip-clock-label {\r\n  right: -56px; }\r\n\r\n.flip-clock-small-wrapper .flip-clock-dot.top {\r\n  top: 10px; }\r\n\r\n.flip-clock-small-wrapper .flip-clock-dot.bottom {\r\n  bottom: 6px; }\r\n\r\n.flip-clock-small-wrapper ul.play li.flip-clock-active .down {\r\n  z-index: 2;\r\n  -webkit-animation: turn 0.5s 0.5s linear both;\r\n  -moz-animation: turn 0.5s 0.5s linear both;\r\n  animation: turn 0.5s 0.5s linear both; }\r\n\r\n.flip-clock-small-wrapper ul.play li.flip-clock-before .up {\r\n  z-index: 2;\r\n  -webkit-animation: turn2 0.5s linear both;\r\n  -moz-animation: turn2 0.5s linear both;\r\n  animation: turn2 0.5s linear both; }\r\n\r\n.flip-clock-small-wrapper ul li.flip-clock-active {\r\n  z-index: 3; }\r\n\r\n/* SHADOW */\r\n.flip-clock-small-wrapper ul.play li.flip-clock-before .up .shadow {\r\n  background: -moz-linear-gradient(top, rgba(0, 0, 0, 0.1) 0%, black 100%);\r\n  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, rgba(0, 0, 0, 0.1)), color-stop(100%, black));\r\n  background: linear, top, rgba(0, 0, 0, 0.1) 0%, black 100%;\r\n  background: -o-linear-gradient(top, rgba(0, 0, 0, 0.1) 0%, black 100%);\r\n  background: -ms-linear-gradient(top, rgba(0, 0, 0, 0.1) 0%, black 100%);\r\n  background: linear, to bottom, rgba(0, 0, 0, 0.1) 0%, black 100%;\r\n  -webkit-animation: show 0.5s linear both;\r\n  -moz-animation: show 0.5s linear both;\r\n  animation: show 0.5s linear both; }\r\n\r\n.flip-clock-small-wrapper ul.play li.flip-clock-active .up .shadow {\r\n  background: -moz-linear-gradient(top, rgba(0, 0, 0, 0.1) 0%, black 100%);\r\n  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, rgba(0, 0, 0, 0.1)), color-stop(100%, black));\r\n  background: linear, top, rgba(0, 0, 0, 0.1) 0%, black 100%;\r\n  background: -o-linear-gradient(top, rgba(0, 0, 0, 0.1) 0%, black 100%);\r\n  background: -ms-linear-gradient(top, rgba(0, 0, 0, 0.1) 0%, black 100%);\r\n  background: linear, to bottom, rgba(0, 0, 0, 0.1) 0%, black 100%;\r\n  -webkit-animation: hide 0.5s 0.3s linear both;\r\n  -moz-animation: hide 0.5s 0.3s linear both;\r\n  animation: hide 0.5s 0.3s linear both; }\r\n\r\n/*DOWN*/\r\n.flip-clock-small-wrapper ul.play li.flip-clock-before .down .shadow {\r\n  background: -moz-linear-gradient(top, black 0%, rgba(0, 0, 0, 0.1) 100%);\r\n  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, black), color-stop(100%, rgba(0, 0, 0, 0.1)));\r\n  background: linear, top, black 0%, rgba(0, 0, 0, 0.1) 100%;\r\n  background: -o-linear-gradient(top, black 0%, rgba(0, 0, 0, 0.1) 100%);\r\n  background: -ms-linear-gradient(top, black 0%, rgba(0, 0, 0, 0.1) 100%);\r\n  background: linear, to bottom, black 0%, rgba(0, 0, 0, 0.1) 100%;\r\n  -webkit-animation: show 0.5s linear both;\r\n  -moz-animation: show 0.5s linear both;\r\n  animation: show 0.5s linear both; }\r\n\r\n.flip-clock-small-wrapper ul.play li.flip-clock-active .down .shadow {\r\n  background: -moz-linear-gradient(top, black 0%, rgba(0, 0, 0, 0.1) 100%);\r\n  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, black), color-stop(100%, rgba(0, 0, 0, 0.1)));\r\n  background: linear, top, black 0%, rgba(0, 0, 0, 0.1) 100%;\r\n  background: -o-linear-gradient(top, black 0%, rgba(0, 0, 0, 0.1) 100%);\r\n  background: -ms-linear-gradient(top, black 0%, rgba(0, 0, 0, 0.1) 100%);\r\n  background: linear, to bottom, black 0%, rgba(0, 0, 0, 0.1) 100%;\r\n  -webkit-animation: hide 0.5s 0.3s linear both;\r\n  -moz-animation: hide 0.5s 0.3s linear both;\r\n  animation: hide 0.5s 0.2s linear both; }\r\n\r\n`\r\n`/*\r\n\tBase.js, version 1.1a\r\n\tCopyright 2006-2010, Dean Edwards\r\n\tLicense: http://www.opensource.org/licenses/mit-license.php\r\n*/\r\n\r\nvar Base = function() {\r\n\t// dummy\r\n};\r\n\r\nBase.extend = function(_instance, _static) { // subclass\r\n\t\r\n\t\"use strict\";\r\n\t\r\n\tvar extend = Base.prototype.extend;\r\n\t\r\n\t// build the prototype\r\n\tBase._prototyping = true;\r\n\tvar proto = new this();\r\n\textend.call(proto, _instance);\r\n  proto.base = function() {\r\n    // call this method from any other method to invoke that method's ancestor\r\n  };\r\n\tdelete Base._prototyping;\r\n\t\r\n\t// create the wrapper for the constructor function\r\n\t//var constructor = proto.constructor.valueOf(); //-dean\r\n\tvar constructor = proto.constructor;\r\n\tvar klass = proto.constructor = function() {\r\n\t\tif (!Base._prototyping) {\r\n\t\t\tif (this._constructing || this.constructor == klass) { // instantiation\r\n\t\t\t\tthis._constructing = true;\r\n\t\t\t\tconstructor.apply(this, arguments);\r\n\t\t\t\tdelete this._constructing;\r\n\t\t\t} else if (arguments[0] !== null) { // casting\r\n\t\t\t\treturn (arguments[0].extend || extend).call(arguments[0], proto);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t\r\n\t// build the class interface\r\n\tklass.ancestor = this;\r\n\tklass.extend = this.extend;\r\n\tklass.forEach = this.forEach;\r\n\tklass.implement = this.implement;\r\n\tklass.prototype = proto;\r\n\tklass.toString = this.toString;\r\n\tklass.valueOf = function(type) {\r\n\t\t//return (type == \"object\") ? klass : constructor; //-dean\r\n\t\treturn (type == \"object\") ? klass : constructor.valueOf();\r\n\t};\r\n\textend.call(klass, _static);\r\n\t// class initialisation\r\n\tif (typeof klass.init == \"function\") klass.init();\r\n\treturn klass;\r\n};\r\n\r\nBase.prototype = {\t\r\n\textend: function(source, value) {\r\n\t\tif (arguments.length > 1) { // extending with a name/value pair\r\n\t\t\tvar ancestor = this[source];\r\n\t\t\tif (ancestor && (typeof value == \"function\") && // overriding a method?\r\n\t\t\t\t// the valueOf() comparison is to avoid circular references\r\n\t\t\t\t(!ancestor.valueOf || ancestor.valueOf() != value.valueOf()) &&\r\n\t\t\t\t/\\bbase\\b/.test(value)) {\r\n\t\t\t\t// get the underlying method\r\n\t\t\t\tvar method = value.valueOf();\r\n\t\t\t\t// override\r\n\t\t\t\tvalue = function() {\r\n\t\t\t\t\tvar previous = this.base || Base.prototype.base;\r\n\t\t\t\t\tthis.base = ancestor;\r\n\t\t\t\t\tvar returnValue = method.apply(this, arguments);\r\n\t\t\t\t\tthis.base = previous;\r\n\t\t\t\t\treturn returnValue;\r\n\t\t\t\t};\r\n\t\t\t\t// point to the underlying method\r\n\t\t\t\tvalue.valueOf = function(type) {\r\n\t\t\t\t\treturn (type == \"object\") ? value : method;\r\n\t\t\t\t};\r\n\t\t\t\tvalue.toString = Base.toString;\r\n\t\t\t}\r\n\t\t\tthis[source] = value;\r\n\t\t} else if (source) { // extending with an object literal\r\n\t\t\tvar extend = Base.prototype.extend;\r\n\t\t\t// if this object has a customised extend method then use it\r\n\t\t\tif (!Base._prototyping && typeof this != \"function\") {\r\n\t\t\t\textend = this.extend || extend;\r\n\t\t\t}\r\n\t\t\tvar proto = {toSource: null};\r\n\t\t\t// do the \"toString\" and other methods manually\r\n\t\t\tvar hidden = [\"constructor\", \"toString\", \"valueOf\"];\r\n\t\t\t// if we are prototyping then include the constructor\r\n\t\t\tvar i = Base._prototyping ? 0 : 1;\r\n\t\t\twhile (key = hidden[i++]) {\r\n\t\t\t\tif (source[key] != proto[key]) {\r\n\t\t\t\t\textend.call(this, key, source[key]);\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// copy each of the source object's properties to this object\r\n\t\t\tfor (var key in source) {\r\n\t\t\t\tif (!proto[key]) extend.call(this, key, source[key]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n};\r\n\r\n// initialise\r\nBase = Base.extend({\r\n\tconstructor: function() {\r\n\t\tthis.extend(arguments[0]);\r\n\t}\r\n}, {\r\n\tancestor: Object,\r\n\tversion: \"1.1\",\r\n\t\r\n\tforEach: function(object, block, context) {\r\n\t\tfor (var key in object) {\r\n\t\t\tif (this.prototype[key] === undefined) {\r\n\t\t\t\tblock.call(context, object[key], key, object);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\t\r\n\timplement: function() {\r\n\t\tfor (var i = 0; i < arguments.length; i++) {\r\n\t\t\tif (typeof arguments[i] == \"function\") {\r\n\t\t\t\t// if it's a function, call it\r\n\t\t\t\targuments[i](this.prototype);\r\n\t\t\t} else {\r\n\t\t\t\t// add the interface using the extend method\r\n\t\t\t\tthis.prototype.extend(arguments[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\t\r\n\ttoString: function() {\r\n\t\treturn String(this.valueOf());\r\n\t}\r\n});\r\n/*jshint smarttabs:true */\r\n\r\nvar FlipClock;\r\n\t\r\n/**\r\n * FlipClock.js\r\n *\r\n * @author     Justin Kimbrell\r\n * @copyright  2013 - Objective HTML, LLC\r\n * @licesnse   http://www.opensource.org/licenses/mit-license.php\r\n */\r\n\t\r\n(function($) {\r\n\t\r\n\t\"use strict\";\r\n\t\r\n\t/**\r\n\t * FlipFlock Helper\r\n\t *\r\n\t * @param  object  A jQuery object or CSS select\r\n\t * @param  int     An integer used to start the clock (no. seconds)\r\n\t * @param  object  An object of properties to override the default\t\r\n\t */\r\n\t \r\n\tFlipClock = function(obj, digit, options) {\r\n\t\treturn new FlipClock.Factory(obj, digit, options);\r\n\t};\r\n\r\n\t/**\r\n\t * The global FlipClock.Lang object\r\n\t */\r\n\r\n\tFlipClock.Lang = {};\r\n\t\r\n\t/**\r\n\t * The Base FlipClock class is used to extend all other FlipFlock\r\n\t * classes. It handles the callbacks and the basic setters/getters\r\n\t *\t\r\n\t * @param \tobject  An object of the default properties\r\n\t * @param \tobject  An object of properties to override the default\t\r\n\t */\r\n\r\n\tFlipClock.Base = Base.extend({\r\n\t\t\r\n\t\t/**\r\n\t\t * Build Date\r\n\t\t */\r\n\t\t \r\n\t\tbuildDate: '2013-11-07',\r\n\t\t\r\n\t\t/**\r\n\t\t * Version\r\n\t\t */\r\n\t\t \r\n\t\tversion: '0.3.1',\r\n\t\t\r\n\t\t/**\r\n\t\t * Sets the default options\r\n\t\t *\r\n\t\t * @param\tobject \tThe default options\r\n\t\t * @param\tobject \tThe override options\r\n\t\t */\r\n\t\t \r\n\t\tconstructor: function(_default, options) {\r\n\t\t\tif(typeof _default !== \"object\") {\r\n\t\t\t\t_default = {};\r\n\t\t\t}\r\n\t\t\tif(typeof options !== \"object\") {\r\n\t\t\t\toptions = {};\r\n\t\t\t}\r\n\t\t\tthis.setOptions($.extend(true, {}, _default, options));\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Delegates the callback to the defined method\r\n\t\t *\r\n\t\t * @param\tobject \tThe default options\r\n\t\t * @param\tobject \tThe override options\r\n\t\t */\r\n\t\t \r\n\t\tcallback: function(method) {\r\n\t\t \tif(typeof method === \"function\") {\r\n\t\t\t\tvar args = [];\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\tfor(var x = 1; x <= arguments.length; x++) {\r\n\t\t\t\t\tif(arguments[x]) {\r\n\t\t\t\t\t\targs.push(arguments[x]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tmethod.apply(this, args);\r\n\t\t\t}\r\n\t\t},\r\n\t\t \r\n\t\t/**\r\n\t\t * Log a string into the console if it exists\r\n\t\t *\r\n\t\t * @param \tstring \tThe name of the option\r\n\t\t * @return\tmixed\r\n\t\t */\t\t\r\n\t\t \r\n\t\tlog: function(str) {\r\n\t\t\tif(window.console && console.log) {\r\n\t\t\t\tconsole.log(str);\r\n\t\t\t}\r\n\t\t},\r\n\t\t \r\n\t\t/**\r\n\t\t * Get an single option value. Returns false if option does not exist\r\n\t\t *\r\n\t\t * @param \tstring \tThe name of the option\r\n\t\t * @return\tmixed\r\n\t\t */\t\t\r\n\t\t \r\n\t\tgetOption: function(index) {\r\n\t\t\tif(this[index]) {\r\n\t\t\t\treturn this[index];\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Get all options\r\n\t\t *\r\n\t\t * @return\tbool\r\n\t\t */\t\t\r\n\t\t \r\n\t\tgetOptions: function() {\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Set a single option value\r\n\t\t *\r\n\t\t * @param \tstring \tThe name of the option\r\n\t\t * @param \tmixed \tThe value of the option\r\n\t\t */\t\t\r\n\t\t \r\n\t\tsetOption: function(index, value) {\r\n\t\t\tthis[index] = value;\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Set a multiple options by passing a JSON object\r\n\t\t *\r\n\t\t * @param \tobject \tThe object with the options\r\n\t\t * @param \tmixed \tThe value of the option\r\n\t\t */\t\t\r\n\t\t\r\n\t\tsetOptions: function(options) {\r\n\t\t\tfor(var key in options) {\r\n\t  \t\t\tif(typeof options[key] !== \"undefined\") {\r\n\t\t  \t\t\tthis.setOption(key, options[key]);\r\n\t\t  \t\t}\r\n\t\t  \t}\r\n\t\t}\r\n\t\t\r\n\t});\r\n\t\r\n\t/**\r\n\t * The FlipClock Factory class is used to build the clock and manage\r\n\t * all the public methods.\r\n\t *\r\n\t * @param \tobject  A jQuery object or CSS selector used to fetch\r\n\t \t\t\t\t    the wrapping DOM nodes\r\n\t * @param \tmixed   This is the digit used to set the clock. If an \r\n\t \t\t\t\t    object is passed, 0 will be used.\t\r\n\t * @param \tobject  An object of properties to override the default\t\r\n\t */\r\n\t \t\r\n\tFlipClock.Factory = FlipClock.Base.extend({\r\n\t\t\r\n\t\t/**\r\n\t\t * Auto start the clock on page load (True|False)\r\n\t\t */\t\r\n\t\t \r\n\t\tautoStart: true,\r\n\t\t\r\n\t\t/**\r\n\t\t * The callback methods\r\n\t\t */\t\t\r\n\t\t \r\n\t\tcallbacks: {\r\n\t\t\tdestroy: false,\r\n\t\t\tcreate: false,\r\n\t\t\tinit: false,\r\n\t\t\tinterval: false,\r\n\t\t\tstart: false,\r\n\t\t\tstop: false,\r\n\t\t\treset: false\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * The CSS classes\r\n\t\t */\t\t\r\n\t\t \r\n\t\tclasses: {\r\n\t\t\tactive: 'flip-clock-active',\r\n\t\t\tbefore: 'flip-clock-before',\r\n\t\t\tdivider: 'flip-clock-divider',\r\n\t\t\tdot: 'flip-clock-dot',\r\n\t\t\tlabel: 'flip-clock-label',\r\n\t\t\tflip: 'flip',\r\n\t\t\tplay: 'play',\r\n\t\t\twrapper: 'flip-clock-wrapper'\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * The name of the clock face class in use\r\n\t\t */\t\r\n\t\t \r\n\t\tclockFace: 'HourlyCounter',\r\n\t\t \r\n\t\t/**\r\n\t\t * The name of the default clock face class to use if the defined\r\n\t\t * clockFace variable is not a valid FlipClock.Face object\r\n\t\t */\t\r\n\t\t \r\n\t\tdefaultClockFace: 'HourlyCounter',\r\n\t\t \r\n\t\t/**\r\n\t\t * The default language\r\n\t\t */\t\r\n\t\t \r\n\t\tdefaultLanguage: 'english',\r\n\t\t \r\n\t\t/**\r\n\t\t * The language being used to display labels (string)\r\n\t\t */\t\r\n\t\t \r\n\t\tlanguage: 'english',\r\n\t\t \r\n\t\t/**\r\n\t\t * The language object after it has been loaded\r\n\t\t */\t\r\n\t\t \r\n\t\tlang: false,\r\n\t\t \r\n\t\t/**\r\n\t\t * The FlipClock.Face object\r\n\t\t */\t\r\n\t\t \r\n\t\tface: true,\r\n\t\t \r\n\t\t/**\r\n\t\t * Is the clock running? (True|False)\r\n\t\t */\t\t\r\n\t\t \r\n\t\trunning: false,\r\n\t\t\r\n\t\t/**\r\n\t\t * The FlipClock.Time object\r\n\t\t */\t\t\r\n\t\t \r\n\t\ttime: false,\r\n\t\t\r\n\t\t/**\r\n\t\t * The FlipClock.Timer object\r\n\t\t */\t\t\r\n\t\t \r\n\t\ttimer: false,\r\n\t\t\r\n\t\t/**\r\n\t\t * An array of FlipClock.List objects\r\n\t\t */\t\t\r\n\t\t \r\n\t\tlists: [],\r\n\t\t\r\n\t\t/**\r\n\t\t * The wrapping jQuery object\r\n\t\t */\t\t\r\n\t\t \r\n\t\t$wrapper: false,\r\n\t\t\r\n\t\t/**\r\n\t\t * Constructor\r\n\t\t *\r\n\t\t * @param   object  The wrapping jQuery object\r\n\t\t * @param\tobject  Number of seconds used to start the clock\r\n\t\t * @param\tobject \tAn object override options\r\n\t\t */\r\n\t\t \r\n\t\tconstructor: function(obj, digit, options) {\r\n\t\t\t\r\n\t\t\tthis.lists \t  = [];\r\n\t\t\tthis.running  = false;\r\n\t\t\tthis.base(options);\t\t\r\n\t\t\tthis.$wrapper = $(obj).addClass(this.classes.wrapper);\r\n\t\t\tthis.time     = new FlipClock.Time(this, digit ? Math.round(digit) : 0);\r\n\t\t\tthis.timer    = new FlipClock.Timer(this, options);\r\n\r\n\t\t\tthis.lang     = this.loadLanguage(this.language);\r\n\t\t\tthis.face     = this.loadClockFace(this.clockFace, options);\r\n\r\n\t\t\tif(this.autoStart) {\r\n\t\t\t\tthis.start();\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Load the FlipClock.Face object\r\n\t\t *\r\n\t\t * @param\tobject  The name of the FlickClock.Face class\r\n\t\t * @param\tobject \tAn object override options\r\n\t\t */\r\n\t\t \r\n\t\tloadClockFace: function(name, options) {\t\r\n\t\t\tvar face, suffix = 'Face';\r\n\t\t\t\r\n\t\t\tname = name.ucfirst()+suffix;\r\n\t\t\t\r\n\t\t\tif(FlipClock[name]) {\r\n\t\t\t\tface = new FlipClock[name](this, options);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tface = new FlipClock[this.defaultClockFace+suffix](this, options);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tface.build();\r\n\t\t\t\t\r\n\t\t\treturn face;\r\n\t\t},\r\n\t\t\t\r\n\t\t\r\n\t\t/**\r\n\t\t * Load the FlipClock.Lang object\r\n\t\t *\r\n\t\t * @param\tobject  The name of the language to load\r\n\t\t */\r\n\t\t \r\n\t\tloadLanguage: function(name) {\t\r\n\t\t\tvar lang;\r\n\t\t\t\r\n\t\t\tif(FlipClock.Lang[name.ucfirst()]) {\r\n\t\t\t\tlang = FlipClock.Lang[name.ucfirst()];\r\n\t\t\t}\r\n\t\t\telse if(FlipClock.Lang[name]) {\r\n\t\t\t\tlang = FlipClock.Lang[name];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlang = FlipClock.Lang[this.defaultLanguage];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn lang;\r\n\t\t},\r\n\t\t\t\t\t\r\n\t\t/**\r\n\t\t * Localize strings into various languages\r\n\t\t *\r\n\t\t * @param\tstring  The index of the localized string\r\n\t\t * @param\tobject  Optionally pass a lang object\r\n\t\t */\r\n\r\n\t\tlocalize: function(index, obj) {\r\n\t\t\tvar lang = this.lang;\r\n\r\n\t\t\tif(!index) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar lindex = index.toLowerCase();\r\n\r\n\t\t\tif(typeof obj == \"object\") {\r\n\t\t\t\tlang = obj;\r\n\t\t\t}\r\n\r\n\t\t\tif(lang && lang[lindex]) {\r\n\t\t\t\treturn lang[lindex];\r\n\t\t\t}\r\n\r\n\t\t\treturn index;\r\n\t\t},\r\n\t\t \r\n\r\n\t\t/**\r\n\t\t * Starts the clock\r\n\t\t */\r\n\t\t \r\n\t\tstart: function(callback) {\r\n\t\t\tvar t = this;\r\n\r\n\t\t\tif(!t.running && (!t.countdown || t.countdown && t.time.time > 0)) {\r\n\t\t\t\tt.face.start(t.time);\r\n\t\t\t\tt.timer.start(function() {\r\n\t\t\t\t\tt.flip();\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(typeof callback === \"function\") {\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t}\t\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tt.log('Trying to start timer when countdown already at 0');\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Stops the clock\r\n\t\t */\r\n\t\t \r\n\t\tstop: function(callback) {\r\n\t\t\tthis.face.stop();\r\n\t\t\tthis.timer.stop(callback);\r\n\t\t\t\r\n\t\t\tfor(var x in this.lists) {\r\n\t\t\t\tthis.lists[x].stop();\r\n\t\t\t}\t\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Reset the clock\r\n\t\t */\r\n\t\t \r\n\t\treset: function(callback) {\r\n\t\t\tthis.timer.reset(callback);\r\n\t\t\tthis.face.reset();\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Sets the clock time\r\n\t\t */\r\n\t\t \r\n\t\tsetTime: function(time) {\r\n\t\t\tthis.time.time = time;\r\n\t\t\tthis.face.setTime(time);\t\t\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Get the clock time\r\n\t\t *\r\n\t\t * @return  object  Returns a FlipClock.Time object\r\n\t\t */\r\n\t\t \r\n\t\tgetTime: function(time) {\r\n\t\t\treturn this.time;\t\t\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Changes the increment of time to up or down (add/sub)\r\n\t\t */\r\n\t\t \r\n\t\tsetCountdown: function(value) {\r\n\t\t\tvar running = this.running;\r\n\t\t\t\r\n\t\t\tthis.countdown = value ? true : false;\r\n\t\t\t\t\r\n\t\t\tif(running) {\r\n\t\t\t\tthis.stop();\r\n\t\t\t\tthis.start();\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Flip the digits on the clock\r\n\t\t *\r\n\t\t * @param  array  An array of digits\t \r\n\t\t */\r\n\t\tflip: function() {\r\n\t\t\tthis.face.flip();\r\n\t\t}\r\n\t\t\r\n\t});\r\n\t\r\n\t/**\r\n\t * The FlipClock Face class is the base class in which to extend\r\n\t * all other FlockClock.Face classes.\r\n\t *\r\n\t * @param \tobject  The parent FlipClock.Factory object\r\n\t * @param \tobject  An object of properties to override the default\t\r\n\t */\r\n\t \r\n\tFlipClock.Face = FlipClock.Base.extend({\r\n\t\t\r\n\t\t/**\r\n\t\t * An array of jQuery objects used for the dividers (the colons)\r\n\t\t */\r\n\t\t \r\n\t\tdividers: [],\r\n\r\n\t\t/**\r\n\t\t * An array of FlipClock.List objects\r\n\t\t */\t\t\r\n\t\t \r\n\t\tfactory: false,\r\n\t\t\r\n\t\t/**\r\n\t\t * An array of FlipClock.List objects\r\n\t\t */\t\t\r\n\t\t \r\n\t\tlists: [],\r\n\t\t\t\r\n\t\t/**\r\n\t\t * Constructor\r\n\t\t *\r\n\t\t * @param \tobject  The parent FlipClock.Factory object\r\n\t\t * @param \tobject  An object of properties to override the default\t\r\n\t\t */\r\n\t\t \r\n\t\tconstructor: function(factory, options) {\r\n\t\t\tthis.base(options);\r\n\t\t\tthis.factory  = factory;\r\n\t\t\tthis.dividers = [];\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Build the clock face\r\n\t\t */\r\n\t\t \r\n\t\tbuild: function() {},\r\n\t\t\r\n\t\t/**\r\n\t\t * Creates a jQuery object used for the digit divider\r\n\t\t *\r\n\t\t * @param\tmixed \tThe divider label text\r\n\t\t * @param\tmixed\tSet true to exclude the dots in the divider. \r\n\t\t *\t\t\t\t\tIf not set, is false.\r\n\t\t */\r\n\t\t \r\n\t\tcreateDivider: function(label, css, excludeDots) {\r\n\t\t\r\n\t\t\tif(typeof css == \"boolean\" || !css) {\r\n\t\t\t\texcludeDots = css;\r\n\t\t\t\tcss = label;\r\n\t\t\t}\r\n\r\n\t\t\tvar dots = [\r\n\t\t\t\t'<span class=\"'+this.factory.classes.dot+' top\"></span>',\r\n\t\t\t\t'<span class=\"'+this.factory.classes.dot+' bottom\"></span>'\r\n\t\t\t].join('');\r\n\r\n\t\t\tif(excludeDots) {\r\n\t\t\t\tdots = '';\t\r\n\t\t\t}\r\n\r\n\t\t\tlabel = this.factory.localize(label);\r\n\r\n\t\t\tvar html = [\r\n\t\t\t\t'<span class=\"'+this.factory.classes.divider+' '+(css ? css : '').toLowerCase()+'\">',\r\n\t\t\t\t\t'<span class=\"'+this.factory.classes.label+'\">'+(label ? label : '')+'</span>',\r\n\t\t\t\t\tdots,\r\n\t\t\t\t'</span>'\r\n\t\t\t];\t\r\n\t\t\t\r\n\t\t\treturn $(html.join(''));\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Creates a FlipClock.List object and appends it to the DOM\r\n\t\t *\r\n\t\t * @param\tmixed \tThe digit to select in the list\r\n\t\t * @param\tobject  An object to override the default properties\r\n\t\t */\r\n\t\t \r\n\t\tcreateList: function(digit, options) {\r\n\t\t\tif(typeof digit === \"object\") {\r\n\t\t\t\toptions = digit;\r\n\t\t\t\tdigit = 0;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar obj = new FlipClock.List(this.factory, digit, options);\r\n\r\n\t\t\t//this.factory.$wrapper.append(obj.$obj);\t\r\n\t\t\t\r\n\t\t\treturn obj;\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Triggers when the clock is reset\r\n\t\t */\r\n\t\t \r\n\t\treset: function() {},\r\n\t\t\r\n\t\t/**\r\n\t\t * Sets the clock time\r\n\t\t */\r\n\t\t \r\n\t\tsetTime: function(time) {\r\n\t\t\tthis.flip(time);\t\t\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Sets the clock time\r\n\t\t */\r\n\t\t \r\n\t\taddDigit: function(digit) {\r\n\t\t\tvar obj = this.createList(digit, {\r\n\t\t\t\tclasses: {\r\n\t\t\t\t\tactive: this.factory.classes.active,\r\n\t\t\t\t\tbefore: this.factory.classes.before,\r\n\t\t\t\t\tflip: this.factory.classes.flip\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tobj.$obj.insertBefore(this.factory.lists[0].$obj);\r\n\t\t\t\t\t\t\t\r\n\t\t\tthis.factory.lists.unshift(obj);\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Triggers when the clock is started\r\n\t\t */\r\n\t\t \r\n\t\tstart: function() {},\r\n\t\t\r\n\t\t/**\r\n\t\t * Triggers when the time on the clock stops\r\n\t\t */\r\n\t\t \r\n\t\tstop: function() {},\r\n\t\t\t\r\n\t\t/**\r\n\t\t * Triggers when the numbers on the clock flip\r\n\t\t */\r\n\t\t \r\n\t\tflip: function(time, doNotAddPlayClass) {\r\n\t\t\tvar t = this;\r\n\t\t\t\r\n\t\t\tif(!doNotAddPlayClass) {\r\n\t\t\t\tif(!t.factory.countdown) {\r\n\t\t\t\t\tt.factory.time.time++;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif(t.factory.time.time <= 0) {\r\n\t\t\t\t\t\tt.factory.stop();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tt.factory.time.time--;\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar offset = t.factory.lists.length - time.length;\r\n\t\t\t\r\n\t\t\tif(offset < 0) {\r\n\t\t\t\toffset = 0;\r\n\t\t\t}\t\t\t\r\n\t\t\t\r\n\t\t\tvar totalNew = 0;\r\n\t\t\tvar reFlip = false;\r\n\r\n\t\t\t$.each(time, function(i, digit) {\r\n\t\t\t\ti += offset;\r\n\t\t\t\t\r\n\t\t\t\tvar list = t.factory.lists[i];\r\n\t\t\t\t\t\r\n\t\t\t\tif(list) {\r\n\t\t\t\t\tvar currentDigit = list.digit;\r\n\t\t\t\r\n\t\t\t\t\tlist.select(digit);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(digit != currentDigit && !doNotAddPlayClass) {\r\n\t\t\t\t\t\tlist.play();\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\r\n\t\t\t\telse {\r\n\t\t\t\t\tt.addDigit(digit);\r\n\t\t\t\t\treFlip = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tfor(var x = 0; x < time.length; x++) {\r\n\t\t\t\tif(x >= offset && t.factory.lists[x].digit != time[x]) {\r\n\t\t\t\t\tt.factory.lists[x].select(time[x]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\t\t\r\n\t});\r\n\t\t\r\n\t/**\r\n\t * The FlipClock List class is used to build the list used to create \r\n\t * the card flip effect. This object fascilates selecting the correct\r\n\t * node by passing a specific digit.\r\n\t *\r\n\t * @param \tobject  A FlipClock.Factory object\r\n\t * @param \tmixed   This is the digit used to set the clock. If an \r\n\t *\t\t\t\t    object is passed, 0 will be used.\t\r\n\t * @param \tobject  An object of properties to override the default\t\r\n\t */\r\n\t \t\r\n\tFlipClock.List = FlipClock.Base.extend({\r\n\t\t\r\n\t\t/**\r\n\t\t * The digit (0-9)\r\n\t\t */\t\t\r\n\t\t \r\n\t\tdigit: 0,\r\n\t\t\r\n\t\t/**\r\n\t\t * The CSS classes\r\n\t\t */\t\t\r\n\t\t \r\n\t\tclasses: {\r\n\t\t\tactive: 'flip-clock-active',\r\n\t\t\tbefore: 'flip-clock-before',\r\n\t\t\tflip: 'flip'\t\r\n\t\t},\r\n\t\t\t\t\r\n\t\t/**\r\n\t\t * The parent FlipClock.Factory object\r\n\t\t */\t\t\r\n\t\t \r\n\t\tfactory: false,\r\n\t\t\r\n\t\t/**\r\n\t\t * The wrapping jQuery object\r\n\t\t */\t\t\r\n\t\t \r\n\t\t$obj: false,\r\n\t\t\r\n\t\t/**\r\n\t\t * The items in the list\r\n\t\t */\t\t\r\n\t\t \r\n\t\titems: [],\r\n\t\t\t\t \r\n\t\t/**\r\n\t\t * Constructor\r\n\t\t *\r\n\t\t * @param  object  A FlipClock.Factory object\r\n\t\t * @param  int     An integer use to select the correct digit\r\n\t\t * @param  object  An object to override the default properties\t \r\n\t\t */\r\n\t\t \r\n\t\tconstructor: function(factory, digit, options) {\r\n\t\t\tthis.factory = factory;\r\n\t\t\tthis.digit   = digit;\r\n\t\t\tthis.$obj    = this.createList();\r\n\t\t\t\r\n\t\t\tif(digit > 0) {\r\n\t\t\t\tthis.select(digit);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.factory.$wrapper.append(this.$obj);\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Select the digit in the list\r\n\t\t *\r\n\t\t * @param  int  A digit 0-9\t \r\n\t\t */\r\n\t\t \r\n\t\tselect: function(digit) {\r\n\t\t\tif(typeof digit === \"undefined\") {\r\n\t\t\t\tdigit = this.digit;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.digit = digit;\r\n\t\t\t}\r\n\r\n\t\t\tvar target = this.$obj.find('[data-digit=\"'+digit+'\"]');\r\n\t\t\tvar active = this.$obj.find('.'+this.classes.active).removeClass(this.classes.active);\r\n\t\t\tvar before = this.$obj.find('.'+this.classes.before).removeClass(this.classes.before);\r\n\t\t\t\r\n\t\t\tif(!this.factory.countdown) {\r\n\t\t\t\tif(target.is(':first-child')) {\r\n\t\t\t\t\tthis.$obj.find(':last-child').addClass(this.classes.before);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ttarget.prev().addClass(this.classes.before);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif(target.is(':last-child')) {\r\n\t\t\t\t\tthis.$obj.find(':first-child').addClass(this.classes.before);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ttarget.next().addClass(this.classes.before);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\ttarget.addClass(this.classes.active);\t\t\t\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Adds the play class to the DOM object\r\n\t\t */\r\n\t\t \t\t\r\n\t\tplay: function() {\r\n\t\t\tthis.$obj.addClass(this.factory.classes.play);\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Removes the play class to the DOM object \r\n\t\t */\r\n\t\t \r\n\t\tstop: function() {\r\n\t\t\tvar t = this;\r\n\t\t\t\r\n\t\t\tsetTimeout(function() {\r\n\t\t\t\tt.$obj.removeClass(t.factory.classes.play);\r\n\t\t\t}, this.factory.timer.interval);\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Create the list of digits and appends it to the DOM object \r\n\t\t */\r\n\t\t \r\n\t\tcreateList: function() {\r\n\t\t\r\n\t\t\tvar html = $('<ul class=\"'+this.classes.flip+' '+(this.factory.running ? this.factory.classes.play : '')+'\" />');\r\n\t\t\t\r\n\t\t\tfor(var x = 0; x < 10; x++) {\r\n\t\t\t\tvar item = $([\r\n\t\t\t\t'<li data-digit=\"'+x+'\">',\r\n\t\t\t\t\t'<a href=\"#\">',\r\n\t\t\t\t\t\t'<div class=\"up\">',\r\n\t\t\t\t\t\t\t'<div class=\"shadow\"></div>',\r\n\t\t\t\t\t\t\t'<div class=\"inn\">'+x+'</div>',\r\n\t\t\t\t\t\t'</div>',\r\n\t\t\t\t\t\t'<div class=\"down\">',\r\n\t\t\t\t\t\t\t'<div class=\"shadow\"></div>',\r\n\t\t\t\t\t\t\t'<div class=\"inn\">'+x+'</div>',\r\n\t\t\t\t\t\t'</div>',\r\n\t\t\t\t\t'</a>',\r\n\t\t\t\t'</li>'].join(''));\r\n\t\t\t\t\r\n\t\t\t\tthis.items.push(item);\r\n\t\t\t\t\r\n\t\t\t\thtml.append(item);\r\n\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\treturn html;\r\n\t\t}\r\n\t});\r\n\t\t\r\n\t/**\r\n\t * The FlipClock Time class is used to manage all the time \r\n\t * calculations.\r\n\t *\r\n\t * @param \tobject  A FlipClock.Factory object\r\n\t * @param \tmixed   This is the digit used to set the clock. If an \r\n\t *\t\t\t\t    object is passed, 0 will be used.\t\r\n\t * @param \tobject  An object of properties to override the default\t\r\n\t */\r\n\t \t\r\n\tFlipClock.Time = FlipClock.Base.extend({\r\n\t\t\r\n\t\t/**\r\n\t\t * The time (in seconds)\r\n\t\t */\t\t\r\n\t\t \r\n\t\tminimumDigits: 0,\r\n\t\t\r\n\t\t/**\r\n\t\t * The time (in seconds)\r\n\t\t */\t\t\r\n\t\t \r\n\t\ttime: 0,\r\n\t\t\r\n\t\t/**\r\n\t\t * The parent FlipClock.Factory object\r\n\t\t */\t\t\r\n\t\t \r\n\t\tfactory: false,\r\n\t\t\r\n\t\t/**\r\n\t\t * Constructor\r\n\t\t *\r\n\t\t * @param  object  A FlipClock.Factory object\r\n\t\t * @param  int     An integer use to select the correct digit\r\n\t\t * @param  object  An object to override the default properties\t \r\n\t\t */\r\n\t\t \r\n\t\tconstructor: function(factory, time, options) {\r\n\t\t\tthis.base(options);\r\n\t\t\tthis.factory = factory;\r\n\r\n\t\t\tif(time) {\r\n\t\t\t\tthis.time = time;\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Convert a string or integer to an array of digits\r\n\t\t *\r\n\t\t * @param   mixed  String or Integer of digits\t \r\n\t\t * @return  array  An array of digits \r\n\t\t */\r\n\t\t \r\n\t\tconvertDigitsToArray: function(str) {\r\n\t\t\tvar data = [];\r\n\t\t\t\r\n\t\t\tstr = str.toString();\r\n\t\t\t\r\n\t\t\tfor(var x = 0;x < str.length; x++) {\r\n\t\t\t\tif(str[x].match(/^\\d*$/g)) {\r\n\t\t\t\t\tdata.push(str[x]);\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn data;\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Get a specific digit from the time integer\r\n\t\t *\r\n\t\t * @param   int    The specific digit to select from the time\t \r\n\t\t * @return  mixed  Returns FALSE if no digit is found, otherwise\r\n\t\t *\t\t\t\t   the method returns the defined digit\t \r\n\t\t */\r\n\t\t \r\n\t\tdigit: function(i) {\r\n\t\t\tvar timeStr = this.toString();\r\n\t\t\tvar length  = timeStr.length;\r\n\t\t\t\r\n\t\t\tif(timeStr[length - i])\t {\r\n\t\t\t\treturn timeStr[length - i];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn false;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Formats any array of digits into a valid array of digits\r\n\t\t *\r\n\t\t * @param   mixed  An array of digits\t \r\n\t\t * @return  array  An array of digits \r\n\t\t */\r\n\t\t \r\n\t\tdigitize: function(obj) {\r\n\t\t\tvar data = [];\r\n\t\t\t\r\n\t\t\t$.each(obj, function(i, value) {\r\n\t\t\t\tvalue = value.toString();\r\n\t\t\t\t\r\n\t\t\t\tif(value.length == 1) {\r\n\t\t\t\t\tvalue = '0'+value;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tfor(var x = 0; x < value.length; x++) {\r\n\t\t\t\t\tdata.push(value[x]);\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tif(data.length > this.minimumDigits) {\r\n\t\t\t\tthis.minimumDigits = data.length;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(this.minimumDigits > data.length) {\r\n\t\t\t\tdata.unshift('0');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn data;\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Gets a daily breakdown\r\n\t\t *\r\n\t\t * @return  object  Returns a digitized object\r\n\t\t */\r\n\r\n\t\tgetDayCounter: function(includeSeconds) {\r\n\t\t\tvar digits = [\r\n\t\t\t\tthis.getDays(),\r\n\t\t\t\tthis.getHours(true),\r\n\t\t\t\tthis.getMinutes(true)\r\n\t\t\t];\r\n\r\n\t\t\tif(includeSeconds) {\r\n\t\t\t\tdigits.push(this.getSeconds(true));\r\n\t\t\t}\r\n\r\n\t\t\treturn this.digitize(digits);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Gets number of days\r\n\t\t *\r\n\t\t * @param   bool  Should perform a modulus? If not sent, then no.\r\n\t\t * @return  int   Retuns a floored integer\r\n\t\t */\r\n\t\t \r\n\t\tgetDays: function(mod) {\r\n\t\t\tvar days = this.time / 60 / 60 / 24;\r\n\t\t\t\r\n\t\t\tif(mod) {\r\n\t\t\t\tdays = days % 7;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn Math.floor(days);\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Gets an hourly breakdown\r\n\t\t *\r\n\t\t * @return  object  Returns a digitized object\r\n\t\t */\r\n\t\t \r\n\t\tgetHourCounter: function() {\r\n\t\t\tvar obj = this.digitize([\r\n\t\t\t\tthis.getHours(),\r\n\t\t\t\tthis.getMinutes(true),\r\n\t\t\t\tthis.getSeconds(true)\r\n\t\t\t]);\r\n\t\t\t\r\n\t\t\treturn obj;\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Gets an hourly breakdown\r\n\t\t *\r\n\t\t * @return  object  Returns a digitized object\r\n\t\t */\r\n\t\t \r\n\t\tgetHourly: function() {\r\n\t\t\treturn this.getHourCounter();\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Gets number of hours\r\n\t\t *\r\n\t\t * @param   bool  Should perform a modulus? If not sent, then no.\r\n\t\t * @return  int   Retuns a floored integer\r\n\t\t */\r\n\t\t \r\n\t\tgetHours: function(mod) {\r\n\t\t\tvar hours = this.time / 60 / 60;\r\n\t\t\t\r\n\t\t\tif(mod) {\r\n\t\t\t\thours = hours % 24;\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn Math.floor(hours);\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Gets the twenty-four hour time\r\n\t\t *\r\n\t\t * @return  object  returns a digitized object\r\n\t\t */\r\n\t\t \r\n\t\tgetMilitaryTime: function() {\r\n\t\t\tvar date = new Date(); \r\n\t\t\tvar obj  = this.digitize([\r\n\t\t\t\tdate.getHours(),\r\n\t\t\t\tdate.getMinutes(),\r\n\t\t\t\tdate.getSeconds()\t\t\t\t\r\n\t\t\t]);\r\n\r\n\t\t\treturn obj;\r\n\t\t},\r\n\t\t\t\t\r\n\t\t/**\r\n\t\t * Gets number of minutes\r\n\t\t *\r\n\t\t * @param   bool  Should perform a modulus? If not sent, then no.\r\n\t\t * @return  int   Retuns a floored integer\r\n\t\t */\r\n\t\t \r\n\t\tgetMinutes: function(mod) {\r\n\t\t\tvar minutes = this.time / 60;\r\n\t\t\t\r\n\t\t\tif(mod) {\r\n\t\t\t\tminutes = minutes % 60;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn Math.floor(minutes);\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Gets a minute breakdown\r\n\t\t */\r\n\t\t \r\n\t\tgetMinuteCounter: function() {\r\n\t\t\tvar obj = this.digitize([\r\n\t\t\t\tthis.getMinutes(),\r\n\t\t\t\tthis.getSeconds(true)\r\n\t\t\t]);\r\n\r\n\t\t\treturn obj;\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Gets number of seconds\r\n\t\t *\r\n\t\t * @param   bool  Should perform a modulus? If not sent, then no.\r\n\t\t * @return  int   Retuns a ceiled integer\r\n\t\t */\r\n\t\t \r\n\t\tgetSeconds: function(mod) {\r\n\t\t\tvar seconds = this.time;\r\n\t\t\t\r\n\t\t\tif(mod) {\r\n\t\t\t\tif(seconds == 60) {\r\n\t\t\t\t\tseconds = 0;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tseconds = seconds % 60;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn Math.ceil(seconds);\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Gets the current twelve hour time\r\n\t\t *\r\n\t\t * @return  object  Returns a digitized object\r\n\t\t */\r\n\t\t \r\n\t\tgetTime: function() {\r\n\t\t\tvar date  = new Date(); \r\n\t\t\tvar hours = date.getHours();\r\n\t\t\tvar merid = hours > 12 ? 'PM' : 'AM';\r\n\t\t\tvar obj   = this.digitize([\r\n\t\t\t\thours > 12 ? hours - 12 : (hours === 0 ? 12 : hours),\r\n\t\t\t\tdate.getMinutes(),\r\n\t\t\t\tdate.getSeconds()\t\t\t\t\r\n\t\t\t]);\r\n\r\n\t\t\treturn obj;\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Gets number of weeks\r\n\t\t *\r\n\t\t * @param   bool  Should perform a modulus? If not sent, then no.\r\n\t\t * @return  int   Retuns a floored integer\r\n\t\t */\r\n\t\t \r\n\t\tgetWeeks: function() {\r\n\t\t\tvar weeks = this.time / 60 / 60 / 24 / 7;\r\n\t\t\t\r\n\t\t\tif(mod) {\r\n\t\t\t\tweeks = weeks % 52;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn Math.floor(weeks);\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Removes a specific number of leading zeros from the array.\r\n\t\t * This method prevents you from removing too many digits, even\r\n\t\t * if you try.\r\n\t\t *\r\n\t\t * @param   int    Total number of digits to remove \r\n\t\t * @return  array  An array of digits \r\n\t\t */\r\n\t\t \r\n\t\tremoveLeadingZeros: function(totalDigits, digits) {\r\n\t\t\tvar total    = 0;\r\n\t\t\tvar newArray = [];\r\n\t\t\t\r\n\t\t\t$.each(digits, function(i, digit) {\r\n\t\t\t\tif(i < totalDigits) {\r\n\t\t\t\t\ttotal += parseInt(digits[i], 10);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tnewArray.push(digits[i]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tif(total === 0) {\r\n\t\t\t\treturn newArray;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn digits;\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Converts the object to a human readable string\r\n\t\t */\r\n\t\t \r\n\t\ttoString: function() {\r\n\t\t\treturn this.time.toString();\r\n\t\t}\r\n\t\t\r\n\t\t/*\r\n\t\tgetYears: function() {\r\n\t\t\treturn Math.floor(this.time / 60 / 60 / 24 / 7 / 52);\r\n\t\t},\r\n\t\t\r\n\t\tgetDecades: function() {\r\n\t\t\treturn Math.floor(this.getWeeks() / 10);\r\n\t\t}*/\r\n\t});\r\n\t\r\n\t/**\r\n\t * The FlipClock.Timer object managers the JS timers\r\n\t *\r\n\t * @param\tobject  The parent FlipClock.Factory object\r\n\t * @param\tobject  Override the default options\r\n\t */\r\n\t\r\n\tFlipClock.Timer = FlipClock.Base.extend({\r\n\t\t\r\n\t\t/**\r\n\t\t * Callbacks\r\n\t\t */\t\t\r\n\t\t \r\n\t\tcallbacks: {\r\n\t\t\tdestroy: false,\r\n\t\t\tcreate: false,\r\n\t\t\tinit: false,\r\n\t\t\tinterval: false,\r\n\t\t\tstart: false,\r\n\t\t\tstop: false,\r\n\t\t\treset: false\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * FlipClock timer count (how many intervals have passed)\r\n\t\t */\t\t\r\n\t\t \r\n\t\tcount: 0,\r\n\t\t\r\n\t\t/**\r\n\t\t * The parent FlipClock.Factory object\r\n\t\t */\t\t\r\n\t\t \r\n\t\tfactory: false,\r\n\t\t\r\n\t\t/**\r\n\t\t * Timer interval (1 second by default)\r\n\t\t */\t\t\r\n\t\t \r\n\t\tinterval: 1000,\r\n\t\t\t\t\r\n\t\t/**\r\n\t\t * Constructor\r\n\t\t *\r\n\t\t * @return\tvoid\r\n\t\t */\t\t\r\n\t\t \r\n\t\tconstructor: function(factory, options) {\r\n\t\t\tthis.base(options);\r\n\t\t\tthis.factory = factory;\r\n\t\t\tthis.callback(this.callbacks.init);\t\r\n\t\t\tthis.callback(this.callbacks.create);\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * This method gets the elapsed the time as an interger\r\n\t\t *\r\n\t\t * @return\tvoid\r\n\t\t */\t\t\r\n\t\t \r\n\t\tgetElapsed: function() {\r\n\t\t\treturn this.count * this.interval;\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * This method gets the elapsed the time as a Date object\r\n\t\t *\r\n\t\t * @return\tvoid\r\n\t\t */\t\t\r\n\t\t \r\n\t\tgetElapsedTime: function() {\r\n\t\t\treturn new Date(this.time + this.getElapsed());\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * This method is resets the timer\r\n\t\t *\r\n\t\t * @param \tcallback  This method resets the timer back to 0\r\n\t\t * @return\tvoid\r\n\t\t */\t\t\r\n\t\t \r\n\t\treset: function(callback) {\r\n\t\t\tclearInterval(this.timer);\r\n\t\t\tthis.count = 0;\r\n\t\t\tthis._setInterval(callback);\t\t\t\r\n\t\t\tthis.callback(this.callbacks.reset);\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * This method is starts the timer\r\n\t\t *\r\n\t\t * @param \tcallback  A function that is called once the timer is destroyed\r\n\t\t * @return\tvoid\r\n\t\t */\t\t\r\n\t\t \r\n\t\tstart: function(callback) {\t\t\r\n\t\t\tthis.factory.running = true;\r\n\t\t\tthis._createTimer(callback);\r\n\t\t\tthis.callback(this.callbacks.start);\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * This method is stops the timer\r\n\t\t *\r\n\t\t * @param \tcallback  A function that is called once the timer is destroyed\r\n\t\t * @return\tvoid\r\n\t\t */\t\t\r\n\t\t \r\n\t\tstop: function(callback) {\r\n\t\t\tthis.factory.running = false;\r\n\t\t\tthis._clearInterval(callback);\r\n\t\t\tthis.callback(this.callbacks.stop);\r\n\t\t\tthis.callback(callback);\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Clear the timer interval\r\n\t\t *\r\n\t\t * @return\tvoid\r\n\t\t */\t\t\r\n\t\t \r\n\t\t_clearInterval: function() {\r\n\t\t\tclearInterval(this.timer);\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Create the timer object\r\n\t\t *\r\n\t\t * @param \tcallback  A function that is called once the timer is created\r\n\t\t * @return\tvoid\r\n\t\t */\t\t\r\n\t\t \r\n\t\t_createTimer: function(callback) {\r\n\t\t\tthis._setInterval(callback);\t\t\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Destroy the timer object\r\n\t\t *\r\n\t\t * @param \tcallback  A function that is called once the timer is destroyed\r\n\t\t * @return\tvoid\r\n\t\t */\t\t\r\n\t\t \t\r\n\t\t_destroyTimer: function(callback) {\r\n\t\t\tthis._clearInterval();\t\t\t\r\n\t\t\tthis.timer = false;\r\n\t\t\tthis.callback(callback);\r\n\t\t\tthis.callback(this.callbacks.destroy);\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * This method is called each time the timer interval is ran\r\n\t\t *\r\n\t\t * @param \tcallback  A function that is called once the timer is destroyed\r\n\t\t * @return\tvoid\r\n\t\t */\t\t\r\n\t\t \r\n\t\t_interval: function(callback) {\r\n\t\t\tthis.callback(this.callbacks.interval);\r\n\t\t\tthis.callback(callback);\r\n\t\t\tthis.count++;\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * This sets the timer interval\r\n\t\t *\r\n\t\t * @param \tcallback  A function that is called once the timer is destroyed\r\n\t\t * @return\tvoid\r\n\t\t */\t\t\r\n\t\t \r\n\t\t_setInterval: function(callback) {\r\n\t\t\tvar t = this;\r\n\t\t\t\r\n\t\t\tt.timer = setInterval(function() {\t\t\t\r\n\t\t\t\tt._interval(callback);\r\n\t\t\t}, this.interval);\r\n\t\t}\r\n\t\t\t\r\n\t});\r\n\t\r\n\t/**\r\n\t * Capitalize the first letter in a string\r\n\t *\r\n\t * @return string\r\n\t */\r\n\t \r\n\tString.prototype.ucfirst = function() {\r\n\t\treturn this.substr(0, 1).toUpperCase() + this.substr(1);\r\n\t};\r\n\t\r\n\t/**\r\n\t * jQuery helper method\r\n\t *\r\n\t * @param  int     An integer used to start the clock (no. seconds)\r\n\t * @param  object  An object of properties to override the default\t\r\n\t */\r\n\t \r\n\t$.fn.FlipClock = function(digit, options) {\r\n\t\tif(typeof digit == \"object\") {\r\n\t\t\toptions = digit;\r\n\t\t\tdigit = 0;\r\n\t\t}\t\t\r\n\t\treturn new FlipClock($(this), digit, options);\r\n\t};\r\n\t\r\n\t/**\r\n\t * jQuery helper method\r\n\t *\r\n\t * @param  int     An integer used to start the clock (no. seconds)\r\n\t * @param  object  An object of properties to override the default\t\r\n\t */\r\n\t \r\n\t$.fn.flipClock = function(digit, options) {\r\n\t\treturn $.fn.FlipClock(digit, options);\r\n\t};\r\n\t\r\n}(jQuery));\r\n\r\n(function($) {\r\n\t\r\n\t/**\r\n\t * Twenty-Four Hour Clock Face\r\n\t *\r\n\t * This class will generate a twenty-four our clock for FlipClock.js\r\n\t *\r\n\t * @param  object  The parent FlipClock.Factory object\r\n\t * @param  object  An object of properties to override the default\t\r\n\t */\r\n\t \r\n\tFlipClock.TwentyFourHourClockFace = FlipClock.Face.extend({\r\n\r\n\t\t/**\r\n\t\t * Constructor\r\n\t\t *\r\n\t\t * @param  object  The parent FlipClock.Factory object\r\n\t\t * @param  object  An object of properties to override the default\t\r\n\t\t */\r\n\t\t \r\n\t\tconstructor: function(factory, options) {\r\n\t\t\tfactory.countdown = false;\r\n\t\t\tthis.base(factory, options);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Build the clock face\r\n\t\t *\r\n\t\t * @param  object  Pass the time that should be used to display on the clock.\t\r\n\t\t */\r\n\t\t \r\n\t\tbuild: function(time) {\r\n\t\t\tvar t        = this;\r\n\t\t\tvar children = this.factory.$wrapper.find('ul');\r\n\r\n\t\t\ttime = time ? time : (this.factory.time.time || this.factory.time.getMilitaryTime());\r\n\t\t\t\r\n\t\t\tif(time.length > children.length) {\r\n\t\t\t\t$.each(time, function(i, digit) {\r\n\t\t\t\t\tt.factory.lists.push(t.createList(digit));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.dividers.push(this.createDivider());\r\n\t\t\tthis.dividers.push(this.createDivider());\r\n\t\t\t\r\n\t\t\t$(this.dividers[0]).insertBefore(this.factory.lists[this.factory.lists.length - 2].$obj);\r\n\t\t\t$(this.dividers[1]).insertBefore(this.factory.lists[this.factory.lists.length - 4].$obj);\r\n\t\t\t\r\n\t\t\tthis._clearExcessDigits();\r\n\t\t\t\r\n\t\t\tif(this.autoStart) {\r\n\t\t\t\tthis.start();\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Flip the clock face\r\n\t\t */\r\n\t\t \r\n\t\tflip: function(time) {\r\n\t\t\ttime = time ? time : this.factory.time.getMilitaryTime();\r\n\t\t\tthis.base(time);\t\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Clear the excess digits from the tens columns for sec/min\r\n\t\t */\r\n\t\t \r\n\t\t_clearExcessDigits: function() {\r\n\t\t\tvar tenSeconds = this.factory.lists[this.factory.lists.length - 2];\r\n\t\t\tvar tenMinutes = this.factory.lists[this.factory.lists.length - 4];\r\n\t\t\t\r\n\t\t\tfor(var x = 6; x < 10; x++) {\r\n\t\t\t\ttenSeconds.$obj.find('li:last-child').remove();\r\n\t\t\t\ttenMinutes.$obj.find('li:last-child').remove();\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\t\r\n\t});\r\n\t\r\n}(jQuery));\r\n(function($) {\r\n\t\t\r\n\t/**\r\n\t * Counter Clock Face\r\n\t *\r\n\t * This class will generate a generice flip counter. The timer has been\r\n\t * disabled. clock.increment() and clock.decrement() have been added.\r\n\t *\r\n\t * @param  object  The parent FlipClock.Factory object\r\n\t * @param  object  An object of properties to override the default\t\r\n\t */\r\n\t \r\n\tFlipClock.CounterFace = FlipClock.Face.extend({\r\n\t\t\r\n\t\tautoStart: false,\r\n\r\n\t\t/**\r\n\t\t * Constructor\r\n\t\t *\r\n\t\t * @param  object  The parent FlipClock.Factory object\r\n\t\t * @param  object  An object of properties to override the default\t\r\n\t\t */\r\n\t\t \r\n\t\tconstructor: function(factory, options) {\r\n\t\t\tfactory.timer.interval = 0;\r\n\t\t\tfactory.autoStart \t   = false;\r\n\t\t\tfactory.running  \t   = true;\r\n\r\n\t\t\tfactory.increment = function() {\r\n\t\t\t\tfactory.countdown = false;\r\n\t\t\t\tfactory.setTime(factory.getTime().time + 1);\r\n\t\t\t};\r\n\r\n\t\t\tfactory.decrement = function() {\r\n\t\t\t\tfactory.countdown = true;\r\n\t\t\t\tfactory.setTime(factory.getTime().time - 1);\r\n\t\t\t};\r\n\r\n\t\t\tfactory.setValue = function(digits) {\r\n\t\t\t\tfactory.setTime(digits);\r\n\t\t\t};\r\n\r\n\t\t\tfactory.setCounter = function(digits) {\r\n\t\t\t\tfactory.setTime(digits);\r\n\t\t\t};\r\n\r\n\t\t\tthis.base(factory, options);\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Build the clock face\t\r\n\t\t */\r\n\t\t \r\n\t\tbuild: function() {\r\n\t\t\tvar t        = this;\r\n\t\t\tvar children = this.factory.$wrapper.find('ul');\r\n\t\t\tvar lists    = [];\r\n\t\t\tvar time \t = this.factory.getTime().digitize([this.factory.getTime().time]);\r\n\r\n\t\t\tif(time.length > children.length) {\r\n\t\t\t\t$.each(time, function(i, digit) {\r\n\t\t\t\t\tvar list = t.createList(digit);\r\n\r\n\t\t\t\t\tlist.select(digit);\r\n\t\t\t\t\tlists.push(list);\r\n\t\t\t\t});\r\n\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\t$.each(lists, function(i, list) {\r\n\t\t\t\tlist.play();\r\n\t\t\t});\r\n\r\n\t\t\tthis.factory.lists = lists;\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Flip the clock face\r\n\t\t */\r\n\t\t \r\n\t\tflip: function(doNotAddPlayClass) {\r\n\t\t\tvar time = this.factory.getTime().digitize([this.factory.getTime().time]);\r\n\r\n\t\t\tthis.base(time, doNotAddPlayClass);\r\n\t\t},\r\n\r\n\t});\r\n\t\r\n}(jQuery));\r\n(function($) {\r\n\r\n\t/**\r\n\t * Daily Counter Clock Face\r\n\t *\r\n\t * This class will generate a daily counter for FlipClock.js. A\r\n\t * daily counter will track days, hours, minutes, and seconds. If\r\n\t * the number of available digits is exceeded in the count, a new\r\n\t * digit will be created.\r\n\t *\r\n\t * @param  object  The parent FlipClock.Factory object\r\n\t * @param  object  An object of properties to override the default\r\n\t */\r\n\r\n\tFlipClock.DailyCounterFace = FlipClock.Face.extend({\r\n\r\n\t\tshowSeconds: true,\r\n\r\n\t\t/**\r\n\t\t * Constructor\r\n\t\t *\r\n\t\t * @param  object  The parent FlipClock.Factory object\r\n\t\t * @param  object  An object of properties to override the default\r\n\t\t */\r\n\r\n\t\tconstructor: function(factory, options) {\r\n\t\t\tthis.base(factory, options);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Build the clock face\r\n\t\t */\r\n\r\n\t\tbuild: function(excludeHours, time) {\r\n\t\t\tvar t        = this;\r\n\t\t\tvar children = this.factory.$wrapper.find('ul');\r\n\t\t\tvar lists    = [];\r\n\t\t\tvar offset   = 0;\r\n\r\n\t\t\ttime     = time ? time : this.factory.time.getDayCounter(this.showSeconds);\r\n\r\n\t\t\tif(time.length > children.length) {\r\n\t\t\t\t$.each(time, function(i, digit) {\r\n\t\t\t\t\tlists.push(t.createList(digit));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tthis.factory.lists = lists;\r\n\r\n\t\t\tif(this.showSeconds) {\r\n\t\t\t\t$(this.createDivider('Seconds')).insertBefore(this.factory.lists[this.factory.lists.length - 2].$obj);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\toffset = 2;\r\n\t\t\t}\r\n\r\n\t\t\t$(this.createDivider('Minutes')).insertBefore(this.factory.lists[this.factory.lists.length - 4 + offset].$obj);\r\n\t\t\t$(this.createDivider('Hours')).insertBefore(this.factory.lists[this.factory.lists.length - 6 + offset].$obj);\r\n\t\t\t$(this.createDivider('Days', true)).insertBefore(this.factory.lists[0].$obj);\r\n\r\n\t\t\tthis._clearExcessDigits();\r\n\r\n\t\t\tif(this.autoStart) {\r\n\t\t\t\tthis.start();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Flip the clock face\r\n\t\t */\r\n\r\n\t\tflip: function(doNotAddPlayClass, time) {\r\n\t\t\tif(!time) {\r\n\t\t\t\ttime = this.factory.time.getDayCounter(this.showSeconds);\r\n\t\t\t}\r\n\t\t\tthis.base(time, doNotAddPlayClass);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Clear the excess digits from the tens columns for sec/min\r\n\t\t */\r\n\r\n\t\t_clearExcessDigits: function() {\r\n\t\t\tvar tenSeconds = this.factory.lists[this.factory.lists.length - 2];\r\n\t\t\tvar tenMinutes = this.factory.lists[this.factory.lists.length - 4];\r\n\r\n\t\t\tfor(var x = 6; x < 10; x++) {\r\n\t\t\t\ttenSeconds.$obj.find('li:last-child').remove();\r\n\t\t\t\ttenMinutes.$obj.find('li:last-child').remove();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t});\r\n\r\n}(jQuery));\r\n(function($) {\r\n\t\t\t\r\n\t/**\r\n\t * Hourly Counter Clock Face\r\n\t *\r\n\t * This class will generate an hourly counter for FlipClock.js. An\r\n\t * hour counter will track hours, minutes, and seconds. If number of\r\n\t * available digits is exceeded in the count, a new digit will be \r\n\t * created.\r\n\t *\r\n\t * @param  object  The parent FlipClock.Factory object\r\n\t * @param  object  An object of properties to override the default\t\r\n\t */\r\n\t \r\n\tFlipClock.HourlyCounterFace = FlipClock.Face.extend({\r\n\t\t\t\r\n\t\tclearExcessDigits: true,\r\n\r\n\t\t/**\r\n\t\t * Constructor\r\n\t\t *\r\n\t\t * @param  object  The parent FlipClock.Factory object\r\n\t\t * @param  object  An object of properties to override the default\t\r\n\t\t */\r\n\t\t \r\n\t\tconstructor: function(factory, options) {\r\n\t\t\tthis.base(factory, options);\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Build the clock face\r\n\t\t */\r\n\t\t\r\n\t\tbuild: function(excludeHours, time) {\r\n\t\t\tvar t        = this;\r\n\t\t\tvar children = this.factory.$wrapper.find('ul');\r\n\t\t\tvar lists = [];\r\n\t\t\t\r\n\t\t\ttime     = time ? time : this.factory.time.getHourCounter();\r\n\t\t\t\r\n\t\t\tif(time.length > children.length) {\r\n\t\t\t\t$.each(time, function(i, digit) {\r\n\t\t\t\t\tlists.push(t.createList(digit));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.factory.lists = lists;\t\r\n\t\t\t\r\n\t\t\t$(this.createDivider('Seconds')).insertBefore(this.factory.lists[this.factory.lists.length - 2].$obj);\r\n\t\t\t$(this.createDivider('Minutes')).insertBefore(this.factory.lists[this.factory.lists.length - 4].$obj);\r\n\t\t\t\r\n\t\t\tif(!excludeHours) {\r\n\t\t\t\t$(this.createDivider('Hours', true)).insertBefore(this.factory.lists[0].$obj);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(this.clearExcessDigits) {\r\n\t\t\t\tthis._clearExcessDigits();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(this.autoStart) {\r\n\t\t\t\tthis.start();\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Flip the clock face\r\n\t\t */\r\n\t\t \r\n\t\tflip: function(doNotAddPlayClass, time) {\r\n\t\t\tif(!time) {\r\n\t\t\t\ttime = this.factory.time.getHourCounter();\r\n\t\t\t}\t\t\t\r\n\t\t\tthis.base(time, doNotAddPlayClass);\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Clear the excess digits from the tens columns for sec/min\r\n\t\t */\r\n\t\t \r\n\t\t_clearExcessDigits: function() {\r\n\t\t\tvar tenSeconds = this.factory.lists[this.factory.lists.length - 2];\r\n\t\t\tvar tenMinutes = this.factory.lists[this.factory.lists.length - 4];\r\n\t\t\t\r\n\t\t\tfor(var x = 6; x < 10; x++) {\r\n\t\t\t\ttenSeconds.$obj.find('li:last-child').remove();\r\n\t\t\t\ttenMinutes.$obj.find('li:last-child').remove();\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t});\r\n\t\r\n}(jQuery));\r\n(function($) {\r\n\t\t\r\n\t/**\r\n\t * Minute Counter Clock Face\r\n\t *\r\n\t * This class will generate a minute counter for FlipClock.js. A\r\n\t * minute counter will track minutes and seconds. If an hour is \r\n\t * reached, the counter will reset back to 0. (4 digits max)\r\n\t *\r\n\t * @param  object  The parent FlipClock.Factory object\r\n\t * @param  object  An object of properties to override the default\t\r\n\t */\r\n\t \r\n\tFlipClock.MinuteCounterFace = FlipClock.HourlyCounterFace.extend({\r\n\t\t\r\n\t\tclearExcessDigits: false,\r\n\r\n\t\t/**\r\n\t\t * Constructor\r\n\t\t *\r\n\t\t * @param  object  The parent FlipClock.Factory object\r\n\t\t * @param  object  An object of properties to override the default\t\r\n\t\t */\r\n\t\t \r\n\t\tconstructor: function(factory, options) {\r\n\t\t\tthis.base(factory, options);\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Build the clock face\t\r\n\t\t */\r\n\t\t \r\n\t\tbuild: function() {\r\n\t\t\tthis.base(true, this.factory.time.getMinuteCounter());\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Flip the clock face\r\n\t\t */\r\n\t\t \r\n\t\tflip: function(doNotAddPlayClass) {\r\n\t\t\tthis.base(doNotAddPlayClass, this.factory.time.getMinuteCounter());\r\n\t\t},\r\n\r\n\t});\r\n\t\r\n}(jQuery));\r\n(function($) {\r\n\t\t\r\n\t/**\r\n\t * Twelve Hour Clock Face\r\n\t *\r\n\t * This class will generate a twelve hour clock for FlipClock.js\r\n\t *\r\n\t * @param  object  The parent FlipClock.Factory object\r\n\t * @param  object  An object of properties to override the default\t\r\n\t */\r\n\t \r\n\tFlipClock.TwelveHourClockFace = FlipClock.TwentyFourHourClockFace.extend({\r\n\t\t\r\n\t\t/**\r\n\t\t * The meridium jQuery DOM object\r\n\t\t */\r\n\t\t \r\n\t\tmeridium: false,\r\n\t\t\r\n\t\t/**\r\n\t\t * The meridium text as string for easy access\r\n\t\t */\r\n\t\t \r\n\t\tmeridiumText: 'AM',\r\n\t\t\t\t\t\r\n\t\t/**\r\n\t\t * Build the clock face\r\n\t\t *\r\n\t\t * @param  object  Pass the time that should be used to display on the clock.\t\r\n\t\t */\r\n\t\t \r\n\t\tbuild: function(time) {\r\n\t\t\tvar t        = this;\r\n\t\t\t\r\n\t\t\ttime = time ? time : (this.factory.time.time ? this.factory.time.time : this.factory.time.getTime());\r\n\t\t\t\r\n\t\t\tthis.base(time);\t\t\t\r\n\t\t\tthis.meridiumText = this._isPM() ? 'PM' : 'AM';\t\t\t\r\n\t\t\tthis.meridium = $([\r\n\t\t\t\t'<ul class=\"flip-clock-meridium\">',\r\n\t\t\t\t\t'<li>',\r\n\t\t\t\t\t\t'<a href=\"#\">'+this.meridiumText+'</a>',\r\n\t\t\t\t\t'</li>',\r\n\t\t\t\t'</ul>'\r\n\t\t\t].join(''));\r\n\t\t\t\r\n\t\t\tthis.meridium.insertAfter(this.factory.lists[this.factory.lists.length-1].$obj);\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Flip the clock face\r\n\t\t */\r\n\t\t \r\n\t\tflip: function() {\t\t\t\r\n\t\t\tif(this.meridiumText != this._getMeridium()) {\r\n\t\t\t\tthis.meridiumText = this._getMeridium();\r\n\t\t\t\tthis.meridium.find('a').html(this.meridiumText);\t\r\n\t\t\t}\r\n\t\t\tthis.base(this.factory.time.getTime());\t\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Get the current meridium\r\n\t\t *\r\n\t\t * @return  string  Returns the meridium (AM|PM)\r\n\t\t */\r\n\t\t \r\n\t\t_getMeridium: function() {\r\n\t\t\treturn new Date().getHours() >= 12 ? 'PM' : 'AM';\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Is it currently in the post-medirium?\r\n\t\t *\r\n\t\t * @return  bool  Returns true or false\r\n\t\t */\r\n\t\t \r\n\t\t_isPM: function() {\r\n\t\t\treturn this._getMeridium() == 'PM' ? true : false;\r\n\t\t},\r\n\t\t\r\n\t\t/**\r\n\t\t * Clear the excess digits from the tens columns for sec/min\r\n\t\t */\r\n\t\t \r\n\t\t_clearExcessDigits: function() {\r\n\t\t\tvar tenSeconds = this.factory.lists[this.factory.lists.length - 2];\r\n\t\t\tvar tenMinutes = this.factory.lists[this.factory.lists.length - 4];\r\n\t\t\t\r\n\t\t\tfor(var x = 6; x < 10; x++) {\r\n\t\t\t\ttenSeconds.$obj.find('li:last-child').remove();\r\n\t\t\t\ttenMinutes.$obj.find('li:last-child').remove();\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\t\r\n\t});\r\n\t\r\n}(jQuery));\r\n(function($) {\r\n\t\t\r\n\t/**\r\n\t * FlipClock German Language Pack\r\n\t *\r\n\t * This class will used to translate tokens into the German language.\r\n\t *\t\r\n\t */\r\n\t \r\n\tFlipClock.Lang.German = {\r\n\t\t\r\n\t\t'years'   : 'Jahre',\r\n\t\t'months'  : 'Monate',\r\n\t\t'days'    : 'Tage',\r\n\t\t'hours'   : 'Stunden',\r\n\t\t'minutes' : 'Minuten',\r\n\t\t'seconds' : 'Sekunden'\t\r\n \r\n\t};\r\n\t\r\n\t/* Create various aliases for convenience */\r\n \r\n\tFlipClock.Lang['de']     = FlipClock.Lang.German;\r\n\tFlipClock.Lang['de-de']  = FlipClock.Lang.German;\r\n\tFlipClock.Lang['german'] = FlipClock.Lang.German;\r\n \r\n}(jQuery));\r\n(function($) {\r\n\t\t\r\n\t/**\r\n\t * FlipClock English Language Pack\r\n\t *\r\n\t * This class will used to translate tokens into the English language.\r\n\t *\t\r\n\t */\r\n\t \r\n\tFlipClock.Lang.English = {\r\n\t\t\r\n\t\t'years'   : 'Years',\r\n\t\t'months'  : 'Months',\r\n\t\t'days'    : 'Days',\r\n\t\t'hours'   : 'Hours',\r\n\t\t'minutes' : 'Minutes',\r\n\t\t'seconds' : 'Seconds'\t\r\n\r\n\t};\r\n\t\r\n\t/* Create various aliases for convenience */\r\n\r\n\tFlipClock.Lang['en']      = FlipClock.Lang.English;\r\n\tFlipClock.Lang['en-us']   = FlipClock.Lang.English;\r\n\tFlipClock.Lang['english'] = FlipClock.Lang.English;\r\n\r\n}(jQuery));\r\n(function($) {\r\n\t\t\r\n\t/**\r\n\t * FlipClock Spanish Language Pack\r\n\t *\r\n\t * This class will used to translate tokens into the Spanish language.\r\n\t *\t\r\n\t */\r\n\t \r\n\tFlipClock.Lang.Spanish = {\r\n\t\t\r\n\t\t'years'   : 'A&#241;os',\r\n\t\t'months'  : 'Meses',\r\n\t\t'days'    : 'D&#205;as',\r\n\t\t'hours'   : 'Horas',\r\n\t\t'minutes' : 'Minutos',\r\n\t\t'seconds' : 'Segundo'\t\r\n\r\n\t};\r\n\t\r\n\t/* Create various aliases for convenience */\r\n\r\n\tFlipClock.Lang['es']      = FlipClock.Lang.Spanish;\r\n\tFlipClock.Lang['es-es']   = FlipClock.Lang.Spanish;\r\n\tFlipClock.Lang['spanish'] = FlipClock.Lang.Spanish;\r\n\r\n}(jQuery));\r\n(function($) {\r\n\r\n  /**\r\n   * FlipClock Canadian French Language Pack\r\n   *\r\n   * This class will used to translate tokens into the Canadian French language.\r\n   *\r\n   */\r\n\r\n  FlipClock.Lang.French = {\r\n\r\n    'years'   : 'ans',\r\n    'months'  : 'mois',\r\n    'days'    : 'jours',\r\n    'hours'   : 'heures',\r\n    'minutes' : 'minutes',\r\n    'seconds' : 'secondes'\r\n\r\n  };\r\n\r\n  /* Create various aliases for convenience */\r\n\r\n  FlipClock.Lang['fr']      = FlipClock.Lang.French;\r\n  FlipClock.Lang['fr-ca']   = FlipClock.Lang.French;\r\n  FlipClock.Lang['french']  = FlipClock.Lang.French;\r\n\r\n}(jQuery));\r\n`\r\n`Habil\r\n\r\n/*!\r\n * The Final Countdown for jQuery v2.0.4 (http://hilios.github.io/jQuery.countdown/)\r\n * Copyright (c) 2014 Edson Hilios\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\r\n * this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to\r\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\r\n * the Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n * \r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n * \r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\r\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\r\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n!function(a){\"use strict\";\"function\"==typeof define&&define.amd?define([\"jquery\"],a):a(jQuery)}(function(a){\"use strict\";function b(a){if(a instanceof Date)return a;if(String(a).match(g))return String(a).match(/^[0-9]*$/)&&(a=Number(a)),String(a).match(/\\-/)&&(a=String(a).replace(/\\-/g,\"/\")),new Date(a);throw new Error(\"Couldn't cast `\"+a+\"` to a date object.\")}function c(a){return function(b){var c=b.match(/%(-|!)?[A-Z]{1}(:[^;]+;)?/gi);if(c)for(var e=0,f=c.length;f>e;++e){var g=c[e].match(/%(-|!)?([a-zA-Z]{1})(:[^;]+;)?/),i=new RegExp(g[0]),j=g[1]||\"\",k=g[3]||\"\",l=null;g=g[2],h.hasOwnProperty(g)&&(l=h[g],l=Number(a[l])),null!==l&&(\"!\"===j&&(l=d(k,l)),\"\"===j&&10>l&&(l=\"0\"+l.toString()),b=b.replace(i,l.toString()))}return b=b.replace(/%%/,\"%\")}}function d(a,b){var c=\"s\",d=\"\";return a&&(a=a.replace(/(:|;|\\s)/gi,\"\").split(/\\,/),1===a.length?c=a[0]:(d=a[0],c=a[1])),1===Math.abs(b)?d:c}var e=100,f=[],g=[];g.push(/^[0-9]*$/.source),g.push(/([0-9]{1,2}\\/){2}[0-9]{4}( [0-9]{1,2}(:[0-9]{2}){2})?/.source),g.push(/[0-9]{4}([\\/\\-][0-9]{1,2}){2}( [0-9]{1,2}(:[0-9]{2}){2})?/.source),g=new RegExp(g.join(\"|\"));var h={Y:\"years\",m:\"months\",w:\"weeks\",d:\"days\",D:\"totalDays\",H:\"hours\",M:\"minutes\",S:\"seconds\"},i=function(b,c,d){this.el=b,this.$el=a(b),this.interval=null,this.offset={},this.instanceNumber=f.length,f.push(this),this.$el.data(\"countdown-instance\",this.instanceNumber),d&&(this.$el.on(\"update.countdown\",d),this.$el.on(\"stoped.countdown\",d),this.$el.on(\"finish.countdown\",d)),this.setFinalDate(c),this.start()};a.extend(i.prototype,{start:function(){null!==this.interval&&clearInterval(this.interval);var a=this;this.update(),this.interval=setInterval(function(){a.update.call(a)},e)},stop:function(){clearInterval(this.interval),this.interval=null,this.dispatchEvent(\"stoped\")},pause:function(){this.stop.call(this)},resume:function(){this.start.call(this)},remove:function(){this.stop(),f[this.instanceNumber]=null,delete this.$el.data().countdownInstance},setFinalDate:function(a){this.finalDate=b(a)},update:function(){return 0===this.$el.closest(\"html\").length?void this.remove():(this.totalSecsLeft=this.finalDate.getTime()-(new Date).getTime(),this.totalSecsLeft=Math.ceil(this.totalSecsLeft/1e3),this.totalSecsLeft=this.totalSecsLeft<0?0:this.totalSecsLeft,this.offset={seconds:this.totalSecsLeft%60,minutes:Math.floor(this.totalSecsLeft/60)%60,hours:Math.floor(this.totalSecsLeft/60/60)%24,days:Math.floor(this.totalSecsLeft/60/60/24)%7,totalDays:Math.floor(this.totalSecsLeft/60/60/24),weeks:Math.floor(this.totalSecsLeft/60/60/24/7),months:Math.floor(this.totalSecsLeft/60/60/24/30),years:Math.floor(this.totalSecsLeft/60/60/24/365)},void(0===this.totalSecsLeft?(this.stop(),this.dispatchEvent(\"finish\")):this.dispatchEvent(\"update\")))},dispatchEvent:function(b){var d=a.Event(b+\".countdown\");d.finalDate=this.finalDate,d.offset=a.extend({},this.offset),d.strftime=c(this.offset),this.$el.trigger(d)}}),a.fn.countdown=function(){var b=Array.prototype.slice.call(arguments,0);return this.each(function(){var c=a(this).data(\"countdown-instance\");if(void 0!==c){var d=f[c],e=b[0];i.prototype.hasOwnProperty(e)?d[e].apply(d,b.slice(1)):null===String(e).match(/^[$A-Z_][0-9A-Z_$]*$/i)?(d.setFinalDate.call(d,e),d.start()):a.error(\"Method %s does not exist on jQuery.countdown\".replace(/\\%s/gi,e))}else new i(this,b[0],b[1])})}});\r\n\r\n\r\n// Create a shortcut to access the formatter function (helps with creating a clock)\r\n(function($){\r\n\t// Map to convert from a directive to offset object property\r\n\tvar DIRECTIVE_KEY_MAP = {\r\n\t  'Y': 'years',\r\n\t  'm': 'months',\r\n\t  'w': 'weeks',\r\n\t  'd': 'days',\r\n\t  'D': 'totalDays',\r\n\t  'H': 'hours',\r\n\t  'M': 'minutes',\r\n\t  'S': 'seconds'\r\n\t};\r\n\t// Returns an escaped regexp from the string\r\n\tfunction escapedRegExp(str) {\r\n\t  var sanitize = str.toString().replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\r\n\t  return new RegExp(sanitize);\r\n\t}\r\n\t// Time string formatter\r\n\tfunction strftime(offsetObject) {\r\n\t  return function(format) {\r\n\t\tvar directives = format.match(/%(-|!)?[A-Z]{1}(:[^;]+;)?/gi);\r\n\t\tif(directives) {\r\n\t\t  for(var i = 0, len = directives.length; i < len; ++i) {\r\n\t\t\tvar directive   = directives[i]\r\n\t\t\t\t.match(/%(-|!)?([a-zA-Z]{1})(:[^;]+;)?/),\r\n\t\t\t  regexp    = escapedRegExp(directive[0]),\r\n\t\t\t  modifier  = directive[1] || '',\r\n\t\t\t  plural    = directive[3] || '',\r\n\t\t\t  value     = null;\r\n\t\t\t  // Get the key\r\n\t\t\t  directive = directive[2];\r\n\t\t\t// Swap shot-versions directives\r\n\t\t\tif(DIRECTIVE_KEY_MAP.hasOwnProperty(directive)) {\r\n\t\t\t  value = DIRECTIVE_KEY_MAP[directive];\r\n\t\t\t  value = Number(offsetObject[value]);\r\n\t\t\t}\r\n\t\t\tif(value !== null) {\r\n\t\t\t  // Pluralize\r\n\t\t\t  if(modifier === '!') {\r\n\t\t\t\tvalue = pluralize(plural, value);\r\n\t\t\t  }\r\n\t\t\t  // Add zero-padding\r\n\t\t\t  if(modifier === '') {\r\n\t\t\t\tif(value < 10) {\r\n\t\t\t\t  value = '0' + value.toString();\r\n\t\t\t\t}\r\n\t\t\t  }\r\n\t\t\t  // Replace the directive\r\n\t\t\t  format = format.replace(regexp, value.toString());\r\n\t\t\t}\r\n\t\t  }\r\n\t\t}\r\n\t\tformat = format.replace(/%%/, '%');\r\n\t\treturn format;\r\n\t  };\r\n\t}\r\n\t// Pluralize\r\n\tfunction pluralize(format, count) {\r\n\t  var plural = 's', singular = '';\r\n\t  if(format) {\r\n\t\tformat = format.replace(/(:|;|\\s)/gi, '').split(/\\,/);\r\n\t\tif(format.length === 1) {\r\n\t\t  plural = format[0];\r\n\t\t} else {\r\n\t\t  singular = format[0];\r\n\t\t  plural = format[1];\r\n\t\t}\r\n\t  }\r\n\t  if(Math.abs(count) === 1) {\r\n\t\treturn singular;\r\n\t  } else {\r\n\t\treturn plural;\r\n\t  }\r\n\t}\r\n\t$.fn.countdown_strftime = strftime;\r\n})(jQuery);`","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}